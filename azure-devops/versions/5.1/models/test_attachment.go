// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TestAttachment test attachment
// swagger:model TestAttachment
type TestAttachment struct {

	// Attachment type.
	// Enum: [generalAttachment codeCoverage consoleLog]
	AttachmentType interface{} `json:"attachmentType,omitempty"`

	// Comment associated with attachment.
	Comment string `json:"comment,omitempty"`

	// Attachment created date.
	// Format: date-time
	CreatedDate strfmt.DateTime `json:"createdDate,omitempty"`

	// Attachment file name
	FileName string `json:"fileName,omitempty"`

	// ID of the attachment.
	ID int32 `json:"id,omitempty"`

	// Attachment size.
	Size int64 `json:"size,omitempty"`

	// Attachment Url.
	URL string `json:"url,omitempty"`
}

// Validate validates this test attachment
func (m *TestAttachment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TestAttachment) validateCreatedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("createdDate", "body", "date-time", m.CreatedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TestAttachment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestAttachment) UnmarshalBinary(b []byte) error {
	var res TestAttachment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
