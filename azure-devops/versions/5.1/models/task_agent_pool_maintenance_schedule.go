// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaskAgentPoolMaintenanceSchedule task agent pool maintenance schedule
// swagger:model TaskAgentPoolMaintenanceSchedule
type TaskAgentPoolMaintenanceSchedule struct {

	// Days for a build (flags enum for days of the week)
	// Enum: [none monday tuesday wednesday thursday friday saturday sunday all]
	DaysToBuild interface{} `json:"daysToBuild,omitempty"`

	// The Job Id of the Scheduled job that will queue the pool maintenance job.
	// Format: uuid
	ScheduleJobID strfmt.UUID `json:"scheduleJobId,omitempty"`

	// Local timezone hour to start
	StartHours int32 `json:"startHours,omitempty"`

	// Local timezone minute to start
	StartMinutes int32 `json:"startMinutes,omitempty"`

	// Time zone of the build schedule (string representation of the time zone id)
	TimeZoneID string `json:"timeZoneId,omitempty"`
}

// Validate validates this task agent pool maintenance schedule
func (m *TaskAgentPoolMaintenanceSchedule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScheduleJobID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskAgentPoolMaintenanceSchedule) validateScheduleJobID(formats strfmt.Registry) error {

	if swag.IsZero(m.ScheduleJobID) { // not required
		return nil
	}

	if err := validate.FormatOf("scheduleJobId", "body", "uuid", m.ScheduleJobID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskAgentPoolMaintenanceSchedule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskAgentPoolMaintenanceSchedule) UnmarshalBinary(b []byte) error {
	var res TaskAgentPoolMaintenanceSchedule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
