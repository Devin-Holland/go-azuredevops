// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// GraphFederatedProviderData Represents a set of data used to communicate with a federated provider on behalf of a particular user.
// swagger:model GraphFederatedProviderData
type GraphFederatedProviderData struct {

	// The access token that can be used to communicated with the federated provider on behalf on the target identity, if we were able to successfully acquire one, otherwise <code>null</code>, if we were not.
	AccessToken string `json:"accessToken,omitempty"`

	// The name of the federated provider, e.g. "github.com".
	ProviderName string `json:"providerName,omitempty"`

	// The descriptor of the graph subject to which this federated provider data corresponds.
	SubjectDescriptor string `json:"subjectDescriptor,omitempty"`

	// The version number of this federated provider data, which corresponds to when it was last updated. Can be used to prevent returning stale provider data from the cache when the caller is aware of a newer version, such as to prevent local cache poisoning from a remote cache or store. This is the app layer equivalent of the data layer sequence ID.
	Version int64 `json:"version,omitempty"`
}

// Validate validates this graph federated provider data
func (m *GraphFederatedProviderData) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GraphFederatedProviderData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GraphFederatedProviderData) UnmarshalBinary(b []byte) error {
	var res GraphFederatedProviderData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
