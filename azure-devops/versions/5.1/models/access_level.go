// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// AccessLevel License assigned to a user
// swagger:model AccessLevel
type AccessLevel struct {

	// Type of Account License (e.g. Express, Stakeholder etc.)
	// Enum: [none earlyAdopter express professional advanced stakeholder]
	AccountLicenseType interface{} `json:"accountLicenseType,omitempty"`

	// Assignment Source of the License (e.g. Group, Unknown etc.
	// Enum: [none unknown groupRule]
	AssignmentSource interface{} `json:"assignmentSource,omitempty"`

	// Display name of the License
	LicenseDisplayName string `json:"licenseDisplayName,omitempty"`

	// Licensing Source (e.g. Account. MSDN etc.)
	// Enum: [none account msdn profile auto trial]
	LicensingSource interface{} `json:"licensingSource,omitempty"`

	// Type of MSDN License (e.g. Visual Studio Professional, Visual Studio Enterprise etc.)
	// Enum: [none eligible professional platforms testProfessional premium ultimate enterprise]
	MsdnLicenseType interface{} `json:"msdnLicenseType,omitempty"`

	// User status in the account
	// Enum: [none active disabled deleted pending expired pendingDisabled]
	Status interface{} `json:"status,omitempty"`

	// Status message.
	StatusMessage string `json:"statusMessage,omitempty"`
}

// Validate validates this access level
func (m *AccessLevel) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AccessLevel) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccessLevel) UnmarshalBinary(b []byte) error {
	var res AccessLevel
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
