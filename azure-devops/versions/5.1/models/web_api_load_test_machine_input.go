// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WebAPILoadTestMachineInput web Api load test machine input
// swagger:model WebApiLoadTestMachineInput
type WebAPILoadTestMachineInput struct {

	// machine group Id
	MachineGroupID string `json:"machineGroupId,omitempty"`

	// machine type
	// Enum: [default cltLoadAgent userLoadAgent]
	MachineType interface{} `json:"machineType,omitempty"`

	// setup configuration
	SetupConfiguration *WebAPISetupParamaters `json:"setupConfiguration,omitempty"`

	// supported run types
	SupportedRunTypes []interface{} `json:"supportedRunTypes"`
}

// Validate validates this web Api load test machine input
func (m *WebAPILoadTestMachineInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSetupConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSupportedRunTypes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WebAPILoadTestMachineInput) validateSetupConfiguration(formats strfmt.Registry) error {

	if swag.IsZero(m.SetupConfiguration) { // not required
		return nil
	}

	if m.SetupConfiguration != nil {
		if err := m.SetupConfiguration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("setupConfiguration")
			}
			return err
		}
	}

	return nil
}

var webApiLoadTestMachineInputSupportedRunTypesItemsEnum []interface{}

func init() {
	var res []interface{}
	if err := json.Unmarshal([]byte(`["visualStudioLoadTest","jMeterLoadTest"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		webApiLoadTestMachineInputSupportedRunTypesItemsEnum = append(webApiLoadTestMachineInputSupportedRunTypesItemsEnum, v)
	}
}

func (m *WebAPILoadTestMachineInput) validateSupportedRunTypesItemsEnum(path, location string, value interface{}) error {
	if err := validate.Enum(path, location, value, webApiLoadTestMachineInputSupportedRunTypesItemsEnum); err != nil {
		return err
	}
	return nil
}

func (m *WebAPILoadTestMachineInput) validateSupportedRunTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.SupportedRunTypes) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WebAPILoadTestMachineInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebAPILoadTestMachineInput) UnmarshalBinary(b []byte) error {
	var res WebAPILoadTestMachineInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
