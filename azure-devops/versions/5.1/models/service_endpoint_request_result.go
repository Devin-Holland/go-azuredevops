// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ServiceEndpointRequestResult service endpoint request result
// swagger:model ServiceEndpointRequestResult
type ServiceEndpointRequestResult struct {

	// error message
	ErrorMessage string `json:"errorMessage,omitempty"`

	// result
	Result *JToken `json:"result,omitempty"`

	// status code
	// Enum: [continue switchingProtocols ok created accepted nonAuthoritativeInformation noContent resetContent partialContent multipleChoices ambiguous movedPermanently moved found redirect seeOther redirectMethod notModified useProxy unused temporaryRedirect redirectKeepVerb badRequest unauthorized paymentRequired forbidden notFound methodNotAllowed notAcceptable proxyAuthenticationRequired requestTimeout conflict gone lengthRequired preconditionFailed requestEntityTooLarge requestUriTooLong unsupportedMediaType requestedRangeNotSatisfiable expectationFailed upgradeRequired internalServerError notImplemented badGateway serviceUnavailable gatewayTimeout httpVersionNotSupported]
	StatusCode interface{} `json:"statusCode,omitempty"`
}

// Validate validates this service endpoint request result
func (m *ServiceEndpointRequestResult) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceEndpointRequestResult) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(m.Result) { // not required
		return nil
	}

	if m.Result != nil {
		if err := m.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ServiceEndpointRequestResult) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceEndpointRequestResult) UnmarshalBinary(b []byte) error {
	var res ServiceEndpointRequestResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
