// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TestEnvironment Test environment Detail.
// swagger:model TestEnvironment
type TestEnvironment struct {

	// Test Environment Id.
	// Format: uuid
	EnvironmentID strfmt.UUID `json:"environmentId,omitempty"`

	// Test Environment Name.
	EnvironmentName string `json:"environmentName,omitempty"`
}

// Validate validates this test environment
func (m *TestEnvironment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironmentID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TestEnvironment) validateEnvironmentID(formats strfmt.Registry) error {

	if swag.IsZero(m.EnvironmentID) { // not required
		return nil
	}

	if err := validate.FormatOf("environmentId", "body", "uuid", m.EnvironmentID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TestEnvironment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestEnvironment) UnmarshalBinary(b []byte) error {
	var res TestEnvironment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
