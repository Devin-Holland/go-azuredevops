// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// VersionedPolicyConfigurationRef A particular revision for a policy configuration.
// swagger:model VersionedPolicyConfigurationRef
type VersionedPolicyConfigurationRef struct {
	PolicyConfigurationRef

	// The policy configuration revision ID.
	Revision int32 `json:"revision,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *VersionedPolicyConfigurationRef) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 PolicyConfigurationRef
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.PolicyConfigurationRef = aO0

	// now for regular properties
	var propsVersionedPolicyConfigurationRef struct {
		Revision int32 `json:"revision,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsVersionedPolicyConfigurationRef); err != nil {
		return err
	}
	m.Revision = propsVersionedPolicyConfigurationRef.Revision

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m VersionedPolicyConfigurationRef) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.PolicyConfigurationRef)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsVersionedPolicyConfigurationRef struct {
		Revision int32 `json:"revision,omitempty"`
	}
	propsVersionedPolicyConfigurationRef.Revision = m.Revision

	jsonDataPropsVersionedPolicyConfigurationRef, errVersionedPolicyConfigurationRef := swag.WriteJSON(propsVersionedPolicyConfigurationRef)
	if errVersionedPolicyConfigurationRef != nil {
		return nil, errVersionedPolicyConfigurationRef
	}
	_parts = append(_parts, jsonDataPropsVersionedPolicyConfigurationRef)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this versioned policy configuration ref
func (m *VersionedPolicyConfigurationRef) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with PolicyConfigurationRef
	if err := m.PolicyConfigurationRef.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *VersionedPolicyConfigurationRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VersionedPolicyConfigurationRef) UnmarshalBinary(b []byte) error {
	var res VersionedPolicyConfigurationRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
