// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ResourceItem Resources include Service Connections, Variable Groups and Secure Files.
// swagger:model ResourceItem
type ResourceItem struct {

	// Gets or sets the identity who created the resource.
	CreatedBy *IdentityRef `json:"createdBy,omitempty"`

	// Gets or sets description of the resource.
	Description string `json:"description,omitempty"`

	// Gets or sets icon url of the resource.
	IconURL string `json:"iconUrl,omitempty"`

	// Gets or sets Id of the resource.
	ID string `json:"id,omitempty"`

	// Indicates whether resource is shared with other projects or not.
	IsShared bool `json:"isShared,omitempty"`

	// Gets or sets name of the resource.
	Name string `json:"name,omitempty"`

	// Gets or sets internal properties of the resource.
	Properties map[string]string `json:"properties,omitempty"`

	// Gets or sets resource type.
	ResourceType string `json:"resourceType,omitempty"`
}

// Validate validates this resource item
func (m *ResourceItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedBy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceItem) validateCreatedBy(formats strfmt.Registry) error {

	if swag.IsZero(m.CreatedBy) { // not required
		return nil
	}

	if m.CreatedBy != nil {
		if err := m.CreatedBy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createdBy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceItem) UnmarshalBinary(b []byte) error {
	var res ResourceItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
