// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// UserEntitlementsPatchResponse user entitlements patch response
// swagger:model UserEntitlementsPatchResponse
type UserEntitlementsPatchResponse struct {
	UserEntitlementsResponseBase

	// List of results for each operation.
	OperationResults []*UserEntitlementOperationResult `json:"operationResults"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *UserEntitlementsPatchResponse) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 UserEntitlementsResponseBase
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.UserEntitlementsResponseBase = aO0

	// now for regular properties
	var propsUserEntitlementsPatchResponse struct {
		OperationResults []*UserEntitlementOperationResult `json:"operationResults"`
	}
	if err := swag.ReadJSON(raw, &propsUserEntitlementsPatchResponse); err != nil {
		return err
	}
	m.OperationResults = propsUserEntitlementsPatchResponse.OperationResults

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m UserEntitlementsPatchResponse) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.UserEntitlementsResponseBase)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsUserEntitlementsPatchResponse struct {
		OperationResults []*UserEntitlementOperationResult `json:"operationResults"`
	}
	propsUserEntitlementsPatchResponse.OperationResults = m.OperationResults

	jsonDataPropsUserEntitlementsPatchResponse, errUserEntitlementsPatchResponse := swag.WriteJSON(propsUserEntitlementsPatchResponse)
	if errUserEntitlementsPatchResponse != nil {
		return nil, errUserEntitlementsPatchResponse
	}
	_parts = append(_parts, jsonDataPropsUserEntitlementsPatchResponse)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this user entitlements patch response
func (m *UserEntitlementsPatchResponse) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with UserEntitlementsResponseBase
	if err := m.UserEntitlementsResponseBase.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperationResults(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserEntitlementsPatchResponse) validateOperationResults(formats strfmt.Registry) error {

	if swag.IsZero(m.OperationResults) { // not required
		return nil
	}

	for i := 0; i < len(m.OperationResults); i++ {
		if swag.IsZero(m.OperationResults[i]) { // not required
			continue
		}

		if m.OperationResults[i] != nil {
			if err := m.OperationResults[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("operationResults" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserEntitlementsPatchResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserEntitlementsPatchResponse) UnmarshalBinary(b []byte) error {
	var res UserEntitlementsPatchResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
