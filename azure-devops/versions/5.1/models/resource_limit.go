// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ResourceLimit resource limit
// swagger:model ResourceLimit
type ResourceLimit struct {

	// failed to reach all providers
	FailedToReachAllProviders bool `json:"failedToReachAllProviders,omitempty"`

	// host Id
	// Format: uuid
	HostID strfmt.UUID `json:"hostId,omitempty"`

	// is hosted
	IsHosted bool `json:"isHosted,omitempty"`

	// is premium
	IsPremium bool `json:"isPremium,omitempty"`

	// parallelism tag
	ParallelismTag string `json:"parallelismTag,omitempty"`

	// resource limits data
	ResourceLimitsData map[string]string `json:"resourceLimitsData,omitempty"`

	// total count
	TotalCount int32 `json:"totalCount,omitempty"`

	// total minutes
	TotalMinutes int32 `json:"totalMinutes,omitempty"`
}

// Validate validates this resource limit
func (m *ResourceLimit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHostID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ResourceLimit) validateHostID(formats strfmt.Registry) error {

	if swag.IsZero(m.HostID) { // not required
		return nil
	}

	if err := validate.FormatOf("hostId", "body", "uuid", m.HostID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ResourceLimit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResourceLimit) UnmarshalBinary(b []byte) error {
	var res ResourceLimit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
