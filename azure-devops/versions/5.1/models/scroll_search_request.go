// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ScrollSearchRequest Defines a scroll code search request.
// swagger:model ScrollSearchRequest
type ScrollSearchRequest struct {
	EntitySearchRequestBase

	// Scroll Id for scroll search query.
	NrDollarScrollID string `json:"$scrollId,omitempty"`

	// Size of data to return for scroll search query. Min value is 201.
	NrDollarScrollSize int32 `json:"$scrollSize,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *ScrollSearchRequest) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 EntitySearchRequestBase
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.EntitySearchRequestBase = aO0

	// now for regular properties
	var propsScrollSearchRequest struct {
		NrDollarScrollID string `json:"$scrollId,omitempty"`

		NrDollarScrollSize int32 `json:"$scrollSize,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsScrollSearchRequest); err != nil {
		return err
	}
	m.NrDollarScrollID = propsScrollSearchRequest.NrDollarScrollID

	m.NrDollarScrollSize = propsScrollSearchRequest.NrDollarScrollSize

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m ScrollSearchRequest) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.EntitySearchRequestBase)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsScrollSearchRequest struct {
		NrDollarScrollID string `json:"$scrollId,omitempty"`

		NrDollarScrollSize int32 `json:"$scrollSize,omitempty"`
	}
	propsScrollSearchRequest.NrDollarScrollID = m.NrDollarScrollID

	propsScrollSearchRequest.NrDollarScrollSize = m.NrDollarScrollSize

	jsonDataPropsScrollSearchRequest, errScrollSearchRequest := swag.WriteJSON(propsScrollSearchRequest)
	if errScrollSearchRequest != nil {
		return nil, errScrollSearchRequest
	}
	_parts = append(_parts, jsonDataPropsScrollSearchRequest)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this scroll search request
func (m *ScrollSearchRequest) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with EntitySearchRequestBase
	if err := m.EntitySearchRequestBase.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *ScrollSearchRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ScrollSearchRequest) UnmarshalBinary(b []byte) error {
	var res ScrollSearchRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
