// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DeploymentQueryParameters deployment query parameters
// swagger:model DeploymentQueryParameters
type DeploymentQueryParameters struct {

	// Query deployments based specified artifact source id.
	ArtifactSourceID string `json:"artifactSourceId,omitempty"`

	// Query deployments based specified artifact type id.
	ArtifactTypeID string `json:"artifactTypeId,omitempty"`

	// Query deployments based specified artifact versions.
	ArtifactVersions []string `json:"artifactVersions"`

	// Query deployment based on deployment status.
	// Enum: [undefined notDeployed inProgress succeeded partiallySucceeded failed all]
	DeploymentStatus interface{} `json:"deploymentStatus,omitempty"`

	// Query deployments number of deployments per environment.
	DeploymentsPerEnvironment int32 `json:"deploymentsPerEnvironment,omitempty"`

	// Query deployments of specified environments.
	Environments []*DefinitionEnvironmentReference `json:"environments"`

	// Query deployments based specified expands.
	// Enum: [all deploymentOnly approvals artifacts]
	Expands interface{} `json:"expands,omitempty"`

	// Specify deleted deployments should return or not.
	IsDeleted bool `json:"isDeleted,omitempty"`

	// Query deployment based on deployment operation status.
	// Enum: [undefined queued scheduled pending approved rejected deferred queuedForAgent phaseInProgress phaseSucceeded phasePartiallySucceeded phaseFailed canceled phaseCanceled manualInterventionPending queuedForPipeline cancelling evaluatingGates gateFailed all]
	OperationStatus interface{} `json:"operationStatus,omitempty"`

	// Query deployments based query type.
	// Enum: [regular failingSince]
	QueryType interface{} `json:"queryType,omitempty"`

	// Query deployments based specified source branch.
	SourceBranch string `json:"sourceBranch,omitempty"`
}

// Validate validates this deployment query parameters
func (m *DeploymentQueryParameters) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnvironments(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeploymentQueryParameters) validateEnvironments(formats strfmt.Registry) error {

	if swag.IsZero(m.Environments) { // not required
		return nil
	}

	for i := 0; i < len(m.Environments); i++ {
		if swag.IsZero(m.Environments[i]) { // not required
			continue
		}

		if m.Environments[i] != nil {
			if err := m.Environments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("environments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentQueryParameters) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentQueryParameters) UnmarshalBinary(b []byte) error {
	var res DeploymentQueryParameters
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
