// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// DataSourceBinding data source binding
// swagger:model DataSourceBinding
type DataSourceBinding struct {

	// Subsequent calls needed?
	CallBackRequiredTemplate string `json:"callBackRequiredTemplate,omitempty"`

	// Pagination format supported by this data source(ContinuationToken/SkipTop).
	CallbackContextTemplate string `json:"callbackContextTemplate,omitempty"`

	// Name of the datasource.
	DataSourceName string `json:"dataSourceName,omitempty"`

	// Endpoint ID of the datasource.
	EndpointID string `json:"endpointId,omitempty"`

	// Endpoint URL of the datasource.
	EndpointURL string `json:"endpointUrl,omitempty"`

	// Defines the initial value of the query params
	InitialContextTemplate string `json:"initialContextTemplate,omitempty"`

	// Parameters of the datasource.
	Parameters map[string]string `json:"parameters,omitempty"`

	// Gets or sets http request body
	RequestContent string `json:"requestContent,omitempty"`

	// Gets or sets http request verb
	RequestVerb string `json:"requestVerb,omitempty"`

	// Result selector applied on output of datasource result, for example jsonpath:$.value[?(@.properties.isEnabled == true)].
	ResultSelector string `json:"resultSelector,omitempty"`

	// Format of the return results, for example. { "Value" : "{{{id}}}", "DisplayValue" : "{{{name}}}" }.
	ResultTemplate string `json:"resultTemplate,omitempty"`

	// Target of the datasource.
	Target string `json:"target,omitempty"`
}

// Validate validates this data source binding
func (m *DataSourceBinding) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DataSourceBinding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DataSourceBinding) UnmarshalBinary(b []byte) error {
	var res DataSourceBinding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
