// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DeploymentPoolSummary Deployment pool summary.
// swagger:model DeploymentPoolSummary
type DeploymentPoolSummary struct {

	// List of deployment groups referring to the deployment pool.
	DeploymentGroups []*DeploymentGroupReference `json:"deploymentGroups"`

	// Number of deployment agents that are offline.
	OfflineAgentsCount int32 `json:"offlineAgentsCount,omitempty"`

	// Number of deployment agents that are online.
	OnlineAgentsCount int32 `json:"onlineAgentsCount,omitempty"`

	// Deployment pool.
	Pool *TaskAgentPoolReference `json:"pool,omitempty"`

	// Virtual machine Resource referring in pool.
	Resource *EnvironmentResourceReference `json:"resource,omitempty"`
}

// Validate validates this deployment pool summary
func (m *DeploymentPoolSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeploymentGroups(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePool(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeploymentPoolSummary) validateDeploymentGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.DeploymentGroups) { // not required
		return nil
	}

	for i := 0; i < len(m.DeploymentGroups); i++ {
		if swag.IsZero(m.DeploymentGroups[i]) { // not required
			continue
		}

		if m.DeploymentGroups[i] != nil {
			if err := m.DeploymentGroups[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("deploymentGroups" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *DeploymentPoolSummary) validatePool(formats strfmt.Registry) error {

	if swag.IsZero(m.Pool) { // not required
		return nil
	}

	if m.Pool != nil {
		if err := m.Pool.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pool")
			}
			return err
		}
	}

	return nil
}

func (m *DeploymentPoolSummary) validateResource(formats strfmt.Registry) error {

	if swag.IsZero(m.Resource) { // not required
		return nil
	}

	if m.Resource != nil {
		if err := m.Resource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resource")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentPoolSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentPoolSummary) UnmarshalBinary(b []byte) error {
	var res DeploymentPoolSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
