// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// WikiPageMoveResponse Response contract for the Wiki Page Move API.
// swagger:model WikiPageMoveResponse
type WikiPageMoveResponse struct {

	// Contains the list of ETag values from the response header of the page move API call. The first item in the list contains the version of the wiki page subject to page move.
	ETag []string `json:"eTag"`

	// Defines properties for wiki page move.
	PageMove *WikiPageMove `json:"pageMove,omitempty"`
}

// Validate validates this wiki page move response
func (m *WikiPageMoveResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePageMove(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WikiPageMoveResponse) validatePageMove(formats strfmt.Registry) error {

	if swag.IsZero(m.PageMove) { // not required
		return nil
	}

	if m.PageMove != nil {
		if err := m.PageMove.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pageMove")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WikiPageMoveResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WikiPageMoveResponse) UnmarshalBinary(b []byte) error {
	var res WikiPageMoveResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
