// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TaskAgentSessionKey Represents a symmetric key used for message-level encryption for communication sent to an agent.
// swagger:model TaskAgentSessionKey
type TaskAgentSessionKey struct {

	// Gets or sets a value indicating whether or not the key value is encrypted. If this value is true, the Value property should be decrypted using the <c>RSA</c> key exchanged with the server during registration.
	Encrypted bool `json:"encrypted,omitempty"`

	// Gets or sets the symmetric key value.
	Value []strfmt.Base64 `json:"value"`
}

// Validate validates this task agent session key
func (m *TaskAgentSessionKey) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskAgentSessionKey) validateValue(formats strfmt.Registry) error {

	if swag.IsZero(m.Value) { // not required
		return nil
	}

	for i := 0; i < len(m.Value); i++ {

		// Format "byte" (base64 string) is already validated when unmarshalled

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskAgentSessionKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskAgentSessionKey) UnmarshalBinary(b []byte) error {
	var res TaskAgentSessionKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
