// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ContinuousDeploymentTriggerIssue continuous deployment trigger issue
// swagger:model ContinuousDeploymentTriggerIssue
type ContinuousDeploymentTriggerIssue struct {
	AutoTriggerIssue

	// Artifact type.
	ArtifactType string `json:"artifactType,omitempty"`

	// ArtifactVersion ID.
	ArtifactVersionID string `json:"artifactVersionId,omitempty"`

	// Artifact source ID.
	SourceID string `json:"sourceId,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *ContinuousDeploymentTriggerIssue) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 AutoTriggerIssue
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.AutoTriggerIssue = aO0

	// now for regular properties
	var propsContinuousDeploymentTriggerIssue struct {
		ArtifactType string `json:"artifactType,omitempty"`

		ArtifactVersionID string `json:"artifactVersionId,omitempty"`

		SourceID string `json:"sourceId,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsContinuousDeploymentTriggerIssue); err != nil {
		return err
	}
	m.ArtifactType = propsContinuousDeploymentTriggerIssue.ArtifactType

	m.ArtifactVersionID = propsContinuousDeploymentTriggerIssue.ArtifactVersionID

	m.SourceID = propsContinuousDeploymentTriggerIssue.SourceID

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m ContinuousDeploymentTriggerIssue) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.AutoTriggerIssue)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsContinuousDeploymentTriggerIssue struct {
		ArtifactType string `json:"artifactType,omitempty"`

		ArtifactVersionID string `json:"artifactVersionId,omitempty"`

		SourceID string `json:"sourceId,omitempty"`
	}
	propsContinuousDeploymentTriggerIssue.ArtifactType = m.ArtifactType

	propsContinuousDeploymentTriggerIssue.ArtifactVersionID = m.ArtifactVersionID

	propsContinuousDeploymentTriggerIssue.SourceID = m.SourceID

	jsonDataPropsContinuousDeploymentTriggerIssue, errContinuousDeploymentTriggerIssue := swag.WriteJSON(propsContinuousDeploymentTriggerIssue)
	if errContinuousDeploymentTriggerIssue != nil {
		return nil, errContinuousDeploymentTriggerIssue
	}
	_parts = append(_parts, jsonDataPropsContinuousDeploymentTriggerIssue)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this continuous deployment trigger issue
func (m *ContinuousDeploymentTriggerIssue) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with AutoTriggerIssue
	if err := m.AutoTriggerIssue.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *ContinuousDeploymentTriggerIssue) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContinuousDeploymentTriggerIssue) UnmarshalBinary(b []byte) error {
	var res ContinuousDeploymentTriggerIssue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
