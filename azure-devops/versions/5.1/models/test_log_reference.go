// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// TestLogReference test log reference
// swagger:model TestLogReference
type TestLogReference struct {

	// BuildId for test log, if context is build
	BuildID int32 `json:"buildId,omitempty"`

	// FileName for log file
	FilePath string `json:"filePath,omitempty"`

	// ReleaseEnvId for test log, if context is Release
	ReleaseEnvID int32 `json:"releaseEnvId,omitempty"`

	// ReleaseId for test log, if context is Release
	ReleaseID int32 `json:"releaseId,omitempty"`

	// Resultid for test log, if context is run and log is related to result
	ResultID int32 `json:"resultId,omitempty"`

	// runid for test log, if context is run
	RunID int32 `json:"runId,omitempty"`

	// Test Log Reference object
	// Enum: [run build release]
	Scope interface{} `json:"scope,omitempty"`

	// SubResultid for test log, if context is run and log is related to subresult
	SubResultID int32 `json:"subResultId,omitempty"`

	// Log Type
	// Enum: [generalAttachment codeCoverage testImpact intermediate]
	Type interface{} `json:"type,omitempty"`
}

// Validate validates this test log reference
func (m *TestLogReference) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TestLogReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestLogReference) UnmarshalBinary(b []byte) error {
	var res TestLogReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
