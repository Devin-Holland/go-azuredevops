// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureKeyVaultVariableGroupProviderData azure key vault variable group provider data
// swagger:model AzureKeyVaultVariableGroupProviderData
type AzureKeyVaultVariableGroupProviderData struct {
	VariableGroupProviderData

	// Gets or sets last refershed time.
	// Format: date-time
	LastRefreshedOn strfmt.DateTime `json:"lastRefreshedOn,omitempty"`

	// Gets or sets the service endpoint ID.
	// Format: uuid
	ServiceEndpointID strfmt.UUID `json:"serviceEndpointId,omitempty"`

	// Gets or sets the vault name.
	Vault string `json:"vault,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *AzureKeyVaultVariableGroupProviderData) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 VariableGroupProviderData
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.VariableGroupProviderData = aO0

	// now for regular properties
	var propsAzureKeyVaultVariableGroupProviderData struct {
		LastRefreshedOn strfmt.DateTime `json:"lastRefreshedOn,omitempty"`

		ServiceEndpointID strfmt.UUID `json:"serviceEndpointId,omitempty"`

		Vault string `json:"vault,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsAzureKeyVaultVariableGroupProviderData); err != nil {
		return err
	}
	m.LastRefreshedOn = propsAzureKeyVaultVariableGroupProviderData.LastRefreshedOn

	m.ServiceEndpointID = propsAzureKeyVaultVariableGroupProviderData.ServiceEndpointID

	m.Vault = propsAzureKeyVaultVariableGroupProviderData.Vault

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m AzureKeyVaultVariableGroupProviderData) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.VariableGroupProviderData)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsAzureKeyVaultVariableGroupProviderData struct {
		LastRefreshedOn strfmt.DateTime `json:"lastRefreshedOn,omitempty"`

		ServiceEndpointID strfmt.UUID `json:"serviceEndpointId,omitempty"`

		Vault string `json:"vault,omitempty"`
	}
	propsAzureKeyVaultVariableGroupProviderData.LastRefreshedOn = m.LastRefreshedOn

	propsAzureKeyVaultVariableGroupProviderData.ServiceEndpointID = m.ServiceEndpointID

	propsAzureKeyVaultVariableGroupProviderData.Vault = m.Vault

	jsonDataPropsAzureKeyVaultVariableGroupProviderData, errAzureKeyVaultVariableGroupProviderData := swag.WriteJSON(propsAzureKeyVaultVariableGroupProviderData)
	if errAzureKeyVaultVariableGroupProviderData != nil {
		return nil, errAzureKeyVaultVariableGroupProviderData
	}
	_parts = append(_parts, jsonDataPropsAzureKeyVaultVariableGroupProviderData)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this azure key vault variable group provider data
func (m *AzureKeyVaultVariableGroupProviderData) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with VariableGroupProviderData

	if err := m.validateLastRefreshedOn(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceEndpointID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureKeyVaultVariableGroupProviderData) validateLastRefreshedOn(formats strfmt.Registry) error {

	if swag.IsZero(m.LastRefreshedOn) { // not required
		return nil
	}

	if err := validate.FormatOf("lastRefreshedOn", "body", "date-time", m.LastRefreshedOn.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AzureKeyVaultVariableGroupProviderData) validateServiceEndpointID(formats strfmt.Registry) error {

	if swag.IsZero(m.ServiceEndpointID) { // not required
		return nil
	}

	if err := validate.FormatOf("serviceEndpointId", "body", "uuid", m.ServiceEndpointID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureKeyVaultVariableGroupProviderData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureKeyVaultVariableGroupProviderData) UnmarshalBinary(b []byte) error {
	var res AzureKeyVaultVariableGroupProviderData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
