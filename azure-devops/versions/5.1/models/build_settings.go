// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BuildSettings Represents system-wide build settings.
// swagger:model BuildSettings
type BuildSettings struct {

	// The number of days to keep records of deleted builds.
	DaysToKeepDeletedBuildsBeforeDestroy int32 `json:"daysToKeepDeletedBuildsBeforeDestroy,omitempty"`

	// The default retention policy.
	DefaultRetentionPolicy *RetentionPolicy `json:"defaultRetentionPolicy,omitempty"`

	// The maximum retention policy.
	MaximumRetentionPolicy *RetentionPolicy `json:"maximumRetentionPolicy,omitempty"`
}

// Validate validates this build settings
func (m *BuildSettings) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDefaultRetentionPolicy(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMaximumRetentionPolicy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BuildSettings) validateDefaultRetentionPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.DefaultRetentionPolicy) { // not required
		return nil
	}

	if m.DefaultRetentionPolicy != nil {
		if err := m.DefaultRetentionPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("defaultRetentionPolicy")
			}
			return err
		}
	}

	return nil
}

func (m *BuildSettings) validateMaximumRetentionPolicy(formats strfmt.Registry) error {

	if swag.IsZero(m.MaximumRetentionPolicy) { // not required
		return nil
	}

	if m.MaximumRetentionPolicy != nil {
		if err := m.MaximumRetentionPolicy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("maximumRetentionPolicy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuildSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildSettings) UnmarshalBinary(b []byte) error {
	var res BuildSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
