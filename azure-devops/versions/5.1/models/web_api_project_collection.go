// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// WebAPIProjectCollection web Api project collection
// swagger:model WebApiProjectCollection
type WebAPIProjectCollection struct {
	WebAPIProjectCollectionRef

	// Project collection description
	Description string `json:"description,omitempty"`

	// Project collection state
	State string `json:"state,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *WebAPIProjectCollection) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 WebAPIProjectCollectionRef
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.WebAPIProjectCollectionRef = aO0

	// now for regular properties
	var propsWebAPIProjectCollection struct {
		Description string `json:"description,omitempty"`

		State string `json:"state,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsWebAPIProjectCollection); err != nil {
		return err
	}
	m.Description = propsWebAPIProjectCollection.Description

	m.State = propsWebAPIProjectCollection.State

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m WebAPIProjectCollection) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.WebAPIProjectCollectionRef)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsWebAPIProjectCollection struct {
		Description string `json:"description,omitempty"`

		State string `json:"state,omitempty"`
	}
	propsWebAPIProjectCollection.Description = m.Description

	propsWebAPIProjectCollection.State = m.State

	jsonDataPropsWebAPIProjectCollection, errWebAPIProjectCollection := swag.WriteJSON(propsWebAPIProjectCollection)
	if errWebAPIProjectCollection != nil {
		return nil, errWebAPIProjectCollection
	}
	_parts = append(_parts, jsonDataPropsWebAPIProjectCollection)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this web Api project collection
func (m *WebAPIProjectCollection) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with WebAPIProjectCollectionRef
	if err := m.WebAPIProjectCollectionRef.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *WebAPIProjectCollection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WebAPIProjectCollection) UnmarshalBinary(b []byte) error {
	var res WebAPIProjectCollection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
