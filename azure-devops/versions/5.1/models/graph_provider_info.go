// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// GraphProviderInfo Who is the provider for this user and what is the identifier and domain that is used to uniquely identify the user.
// swagger:model GraphProviderInfo
type GraphProviderInfo struct {

	// The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations.
	Descriptor string `json:"descriptor,omitempty"`

	// This represents the name of the container of origin for a graph member. (For MSA this is "Windows Live ID", for AAD the tenantID of the directory.)
	Domain string `json:"domain,omitempty"`

	// The type of source provider for the origin identifier (ex: "aad", "msa")
	Origin string `json:"origin,omitempty"`

	// The unique identifier from the system of origin. (For MSA this is the PUID in hex notation, for AAD this is the object id.)
	OriginID string `json:"originId,omitempty"`
}

// Validate validates this graph provider info
func (m *GraphProviderInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GraphProviderInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GraphProviderInfo) UnmarshalBinary(b []byte) error {
	var res GraphProviderInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
