// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Provenance Data about the origin of a published package
// swagger:model Provenance
type Provenance struct {

	// Other provenance data.
	Data map[string]string `json:"data,omitempty"`

	// Type of provenance source, for example "InternalBuild", "InternalRelease"
	ProvenanceSource string `json:"provenanceSource,omitempty"`

	// Identity of user that published the package
	// Format: uuid
	PublisherUserIdentity strfmt.UUID `json:"publisherUserIdentity,omitempty"`

	// HTTP User-Agent used when pushing the package.
	UserAgent string `json:"userAgent,omitempty"`
}

// Validate validates this provenance
func (m *Provenance) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublisherUserIdentity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Provenance) validatePublisherUserIdentity(formats strfmt.Registry) error {

	if swag.IsZero(m.PublisherUserIdentity) { // not required
		return nil
	}

	if err := validate.FormatOf("publisherUserIdentity", "body", "uuid", m.PublisherUserIdentity.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Provenance) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Provenance) UnmarshalBinary(b []byte) error {
	var res Provenance
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
