// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BuildDefinitionSourceProvider build definition source provider
// swagger:model BuildDefinitionSourceProvider
type BuildDefinitionSourceProvider struct {

	// Uri of the associated definition
	DefinitionURI string `json:"definitionUri,omitempty"`

	// fields associated with this build definition
	Fields map[string]string `json:"fields,omitempty"`

	// Id of this source provider
	ID int32 `json:"id,omitempty"`

	// The lst time this source provider was modified
	// Format: date-time
	LastModified strfmt.DateTime `json:"lastModified,omitempty"`

	// Name of the source provider
	Name string `json:"name,omitempty"`

	// Which trigger types are supported by this definition source provider
	// Enum: [none continuousIntegration batchedContinuousIntegration schedule gatedCheckIn batchedGatedCheckIn pullRequest buildCompletion all]
	SupportedTriggerTypes interface{} `json:"supportedTriggerTypes,omitempty"`
}

// Validate validates this build definition source provider
func (m *BuildDefinitionSourceProvider) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastModified(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BuildDefinitionSourceProvider) validateLastModified(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModified) { // not required
		return nil
	}

	if err := validate.FormatOf("lastModified", "body", "date-time", m.LastModified.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuildDefinitionSourceProvider) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildDefinitionSourceProvider) UnmarshalBinary(b []byte) error {
	var res BuildDefinitionSourceProvider
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
