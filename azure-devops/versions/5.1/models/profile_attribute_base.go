// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProfileAttributeBase profile attribute base
// swagger:model ProfileAttributeBase
type ProfileAttributeBase struct {

	// The descriptor of the attribute.
	Descriptor *AttributeDescriptor `json:"descriptor,omitempty"`

	// The revision number of the attribute.
	Revision int32 `json:"revision,omitempty"`

	// The time the attribute was last changed.
	// Format: date-time
	TimeStamp strfmt.DateTime `json:"timeStamp,omitempty"`

	// The value of the attribute.
	Value string `json:"value,omitempty"`
}

// Validate validates this profile attribute base
func (m *ProfileAttributeBase) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescriptor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimeStamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProfileAttributeBase) validateDescriptor(formats strfmt.Registry) error {

	if swag.IsZero(m.Descriptor) { // not required
		return nil
	}

	if m.Descriptor != nil {
		if err := m.Descriptor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("descriptor")
			}
			return err
		}
	}

	return nil
}

func (m *ProfileAttributeBase) validateTimeStamp(formats strfmt.Registry) error {

	if swag.IsZero(m.TimeStamp) { // not required
		return nil
	}

	if err := validate.FormatOf("timeStamp", "body", "date-time", m.TimeStamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProfileAttributeBase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProfileAttributeBase) UnmarshalBinary(b []byte) error {
	var res ProfileAttributeBase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
