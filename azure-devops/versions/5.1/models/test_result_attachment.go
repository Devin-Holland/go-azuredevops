// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TestResultAttachment test result attachment
// swagger:model TestResultAttachment
type TestResultAttachment struct {

	// action path
	ActionPath string `json:"actionPath,omitempty"`

	// attachment type
	// Enum: [generalAttachment codeCoverage consoleLog]
	AttachmentType interface{} `json:"attachmentType,omitempty"`

	// comment
	Comment string `json:"comment,omitempty"`

	// creation date
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// download query string
	DownloadQueryString string `json:"downloadQueryString,omitempty"`

	// file name
	FileName string `json:"fileName,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// is complete
	IsComplete bool `json:"isComplete,omitempty"`

	// iteration Id
	IterationID int32 `json:"iterationId,omitempty"`

	// length
	Length int64 `json:"length,omitempty"`

	// session Id
	SessionID int32 `json:"sessionId,omitempty"`

	// test result Id
	TestResultID int32 `json:"testResultId,omitempty"`

	// test run Id
	TestRunID int32 `json:"testRunId,omitempty"`

	// tmi run Id
	// Format: uuid
	TmiRunID strfmt.UUID `json:"tmiRunId,omitempty"`
}

// Validate validates this test result attachment
func (m *TestResultAttachment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTmiRunID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TestResultAttachment) validateCreationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TestResultAttachment) validateTmiRunID(formats strfmt.Registry) error {

	if swag.IsZero(m.TmiRunID) { // not required
		return nil
	}

	if err := validate.FormatOf("tmiRunId", "body", "uuid", m.TmiRunID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TestResultAttachment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestResultAttachment) UnmarshalBinary(b []byte) error {
	var res TestResultAttachment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
