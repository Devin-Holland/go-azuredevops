// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// QueryByRunRequest query by run request
// swagger:model QueryByRunRequest
type QueryByRunRequest struct {

	// include action results
	IncludeActionResults bool `json:"includeActionResults,omitempty"`

	// outcome
	// Format: byte
	Outcome strfmt.Base64 `json:"outcome,omitempty"`

	// owner
	// Format: uuid
	Owner strfmt.UUID `json:"owner,omitempty"`

	// page size
	PageSize int32 `json:"pageSize,omitempty"`

	// project name
	ProjectName string `json:"projectName,omitempty"`

	// state
	// Format: byte
	State strfmt.Base64 `json:"state,omitempty"`

	// test run Id
	TestRunID int32 `json:"testRunId,omitempty"`
}

// Validate validates this query by run request
func (m *QueryByRunRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOutcome(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *QueryByRunRequest) validateOutcome(formats strfmt.Registry) error {

	if swag.IsZero(m.Outcome) { // not required
		return nil
	}

	// Format "byte" (base64 string) is already validated when unmarshalled

	return nil
}

func (m *QueryByRunRequest) validateOwner(formats strfmt.Registry) error {

	if swag.IsZero(m.Owner) { // not required
		return nil
	}

	if err := validate.FormatOf("owner", "body", "uuid", m.Owner.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *QueryByRunRequest) validateState(formats strfmt.Registry) error {

	if swag.IsZero(m.State) { // not required
		return nil
	}

	// Format "byte" (base64 string) is already validated when unmarshalled

	return nil
}

// MarshalBinary interface implementation
func (m *QueryByRunRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *QueryByRunRequest) UnmarshalBinary(b []byte) error {
	var res QueryByRunRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
