// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GraphMember graph member
// swagger:model GraphMember
type GraphMember struct {
	GraphSubject

	// This represents the name of the container of origin for a graph member. (For MSA this is "Windows Live ID", for AD the name of the domain, for AAD the tenantID of the directory, for VSTS groups the ScopeId, etc)
	Domain string `json:"domain,omitempty"`

	// The email address of record for a given graph member. This may be different than the principal name.
	MailAddress string `json:"mailAddress,omitempty"`

	// This is the PrincipalName of this graph member from the source provider. The source provider may change this field over time and it is not guaranteed to be immutable for the life of the graph member by VSTS.
	PrincipalName string `json:"principalName,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GraphMember) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 GraphSubject
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.GraphSubject = aO0

	// now for regular properties
	var propsGraphMember struct {
		Domain string `json:"domain,omitempty"`

		MailAddress string `json:"mailAddress,omitempty"`

		PrincipalName string `json:"principalName,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsGraphMember); err != nil {
		return err
	}
	m.Domain = propsGraphMember.Domain

	m.MailAddress = propsGraphMember.MailAddress

	m.PrincipalName = propsGraphMember.PrincipalName

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GraphMember) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.GraphSubject)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsGraphMember struct {
		Domain string `json:"domain,omitempty"`

		MailAddress string `json:"mailAddress,omitempty"`

		PrincipalName string `json:"principalName,omitempty"`
	}
	propsGraphMember.Domain = m.Domain

	propsGraphMember.MailAddress = m.MailAddress

	propsGraphMember.PrincipalName = m.PrincipalName

	jsonDataPropsGraphMember, errGraphMember := swag.WriteJSON(propsGraphMember)
	if errGraphMember != nil {
		return nil, errGraphMember
	}
	_parts = append(_parts, jsonDataPropsGraphMember)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this graph member
func (m *GraphMember) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with GraphSubject
	if err := m.GraphSubject.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *GraphMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GraphMember) UnmarshalBinary(b []byte) error {
	var res GraphMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
