// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BuildDeletedEvent build deleted event
// swagger:model BuildDeletedEvent
type BuildDeletedEvent struct {
	RealtimeBuildEvent

	// build
	Build *Build `json:"build,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *BuildDeletedEvent) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 RealtimeBuildEvent
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.RealtimeBuildEvent = aO0

	// now for regular properties
	var propsBuildDeletedEvent struct {
		Build *Build `json:"build,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsBuildDeletedEvent); err != nil {
		return err
	}
	m.Build = propsBuildDeletedEvent.Build

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m BuildDeletedEvent) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.RealtimeBuildEvent)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsBuildDeletedEvent struct {
		Build *Build `json:"build,omitempty"`
	}
	propsBuildDeletedEvent.Build = m.Build

	jsonDataPropsBuildDeletedEvent, errBuildDeletedEvent := swag.WriteJSON(propsBuildDeletedEvent)
	if errBuildDeletedEvent != nil {
		return nil, errBuildDeletedEvent
	}
	_parts = append(_parts, jsonDataPropsBuildDeletedEvent)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this build deleted event
func (m *BuildDeletedEvent) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with RealtimeBuildEvent
	if err := m.RealtimeBuildEvent.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBuild(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BuildDeletedEvent) validateBuild(formats strfmt.Registry) error {

	if swag.IsZero(m.Build) { // not required
		return nil
	}

	if m.Build != nil {
		if err := m.Build.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("build")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BuildDeletedEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BuildDeletedEvent) UnmarshalBinary(b []byte) error {
	var res BuildDeletedEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
