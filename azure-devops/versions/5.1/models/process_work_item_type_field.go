// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ProcessWorkItemTypeField Class that describes a field in a work item type and its properties.
// swagger:model ProcessWorkItemTypeField
type ProcessWorkItemTypeField struct {

	// Allow setting field value to a group identity. Only applies to identity fields.
	AllowGroups bool `json:"allowGroups,omitempty"`

	// Indicates the type of customization on this work item.
	// Enum: [system inherited custom]
	Customization interface{} `json:"customization,omitempty"`

	// The default value of the field.
	DefaultValue interface{} `json:"defaultValue,omitempty"`

	// Description of the field.
	Description string `json:"description,omitempty"`

	// Name of the field.
	Name string `json:"name,omitempty"`

	// If true the field cannot be edited.
	ReadOnly bool `json:"readOnly,omitempty"`

	// Reference name of the field.
	ReferenceName string `json:"referenceName,omitempty"`

	// If true the field cannot be empty.
	Required bool `json:"required,omitempty"`

	// Type of the field.
	// Enum: [string integer dateTime plainText html treePath history double guid boolean identity picklistInteger picklistString picklistDouble]
	Type interface{} `json:"type,omitempty"`

	// Resource URL of the field.
	URL string `json:"url,omitempty"`
}

// Validate validates this process work item type field
func (m *ProcessWorkItemTypeField) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProcessWorkItemTypeField) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProcessWorkItemTypeField) UnmarshalBinary(b []byte) error {
	var res ProcessWorkItemTypeField
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
