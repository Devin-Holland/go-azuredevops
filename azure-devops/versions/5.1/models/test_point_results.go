// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TestPointResults Test Point Results
// swagger:model TestPointResults
type TestPointResults struct {

	// Failure Type for the Test Point
	// Enum: [none regression new_Issue known_Issue unknown null_Value maxValue]
	FailureType interface{} `json:"failureType,omitempty"`

	// Last Resolution State Id for the TEst Point
	// Enum: [none needsInvestigation testIssue productIssue configurationIssue nullValue maxValue]
	LastResolutionState interface{} `json:"lastResolutionState,omitempty"`

	// Last Result Details for the Test Point
	LastResultDetails *LastResultDetails `json:"lastResultDetails,omitempty"`

	// Last Result Id
	LastResultID int32 `json:"lastResultId,omitempty"`

	// Last Result State of the Test Point
	// Enum: [unspecified pending queued inProgress paused completed maxValue]
	LastResultState interface{} `json:"lastResultState,omitempty"`

	// Last RUn Build Number for the Test Point
	LastRunBuildNumber string `json:"lastRunBuildNumber,omitempty"`

	// Last Test Run Id for the Test Point
	LastTestRunID int32 `json:"lastTestRunId,omitempty"`

	// Outcome of the Test Point
	// Enum: [unspecified none passed failed inconclusive timeout aborted blocked notExecuted warning error notApplicable paused inProgress notImpacted maxValue]
	Outcome interface{} `json:"outcome,omitempty"`

	// State of the Test Point
	// Enum: [none ready completed notReady inProgress maxValue]
	State interface{} `json:"state,omitempty"`
}

// Validate validates this test point results
func (m *TestPointResults) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastResultDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TestPointResults) validateLastResultDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.LastResultDetails) { // not required
		return nil
	}

	if m.LastResultDetails != nil {
		if err := m.LastResultDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastResultDetails")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TestPointResults) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TestPointResults) UnmarshalBinary(b []byte) error {
	var res TestPointResults
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
