// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// EndpointURL Represents url of the service endpoint.
// swagger:model EndpointUrl
type EndpointURL struct {

	// Gets or sets the dependency bindings.
	DependsOn *DependsOn `json:"dependsOn,omitempty"`

	// Gets or sets the display name of service endpoint url.
	DisplayName string `json:"displayName,omitempty"`

	// Gets or sets the help text of service endpoint url.
	HelpText string `json:"helpText,omitempty"`

	// Gets or sets the visibility of service endpoint url.
	IsVisible string `json:"isVisible,omitempty"`

	// Gets or sets the value of service endpoint url.
	Value string `json:"value,omitempty"`
}

// Validate validates this endpoint Url
func (m *EndpointURL) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDependsOn(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EndpointURL) validateDependsOn(formats strfmt.Registry) error {

	if swag.IsZero(m.DependsOn) { // not required
		return nil
	}

	if m.DependsOn != nil {
		if err := m.DependsOn.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("dependsOn")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EndpointURL) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EndpointURL) UnmarshalBinary(b []byte) error {
	var res EndpointURL
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
