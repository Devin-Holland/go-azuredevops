// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DeploymentMachineGroup deployment machine group
// swagger:model DeploymentMachineGroup
type DeploymentMachineGroup struct {
	DeploymentMachineGroupReference

	// machines
	Machines []*DeploymentMachine `json:"machines"`

	// size
	Size int32 `json:"size,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *DeploymentMachineGroup) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 DeploymentMachineGroupReference
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.DeploymentMachineGroupReference = aO0

	// now for regular properties
	var propsDeploymentMachineGroup struct {
		Machines []*DeploymentMachine `json:"machines"`

		Size int32 `json:"size,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsDeploymentMachineGroup); err != nil {
		return err
	}
	m.Machines = propsDeploymentMachineGroup.Machines

	m.Size = propsDeploymentMachineGroup.Size

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m DeploymentMachineGroup) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.DeploymentMachineGroupReference)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsDeploymentMachineGroup struct {
		Machines []*DeploymentMachine `json:"machines"`

		Size int32 `json:"size,omitempty"`
	}
	propsDeploymentMachineGroup.Machines = m.Machines

	propsDeploymentMachineGroup.Size = m.Size

	jsonDataPropsDeploymentMachineGroup, errDeploymentMachineGroup := swag.WriteJSON(propsDeploymentMachineGroup)
	if errDeploymentMachineGroup != nil {
		return nil, errDeploymentMachineGroup
	}
	_parts = append(_parts, jsonDataPropsDeploymentMachineGroup)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this deployment machine group
func (m *DeploymentMachineGroup) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with DeploymentMachineGroupReference
	if err := m.DeploymentMachineGroupReference.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMachines(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DeploymentMachineGroup) validateMachines(formats strfmt.Registry) error {

	if swag.IsZero(m.Machines) { // not required
		return nil
	}

	for i := 0; i < len(m.Machines); i++ {
		if swag.IsZero(m.Machines[i]) { // not required
			continue
		}

		if m.Machines[i] != nil {
			if err := m.Machines[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("machines" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentMachineGroup) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentMachineGroup) UnmarshalBinary(b []byte) error {
	var res DeploymentMachineGroup
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
