// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ErrorDetails error details
// swagger:model ErrorDetails
type ErrorDetails struct {

	// last error date
	// Format: date-time
	LastErrorDate strfmt.DateTime `json:"lastErrorDate,omitempty"`

	// message text
	MessageText string `json:"messageText,omitempty"`

	// occurrences
	Occurrences int32 `json:"occurrences,omitempty"`

	// request
	Request string `json:"request,omitempty"`

	// scenario name
	ScenarioName string `json:"scenarioName,omitempty"`

	// stack trace
	StackTrace string `json:"stackTrace,omitempty"`

	// test case name
	TestCaseName string `json:"testCaseName,omitempty"`
}

// Validate validates this error details
func (m *ErrorDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastErrorDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ErrorDetails) validateLastErrorDate(formats strfmt.Registry) error {

	if swag.IsZero(m.LastErrorDate) { // not required
		return nil
	}

	if err := validate.FormatOf("lastErrorDate", "body", "date-time", m.LastErrorDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ErrorDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ErrorDetails) UnmarshalBinary(b []byte) error {
	var res ErrorDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
