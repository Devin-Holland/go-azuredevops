// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AfnStrip afn strip
// swagger:model AfnStrip
type AfnStrip struct {

	// Auxiliary Url to be consumed by MTM
	AuxiliaryURL string `json:"auxiliaryUrl,omitempty"`

	// Creation date of the AfnStrip
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// File name of the attachment created
	FileName string `json:"fileName,omitempty"`

	// ID of AfnStrip. This is same as the attachment ID.
	ID int32 `json:"id,omitempty"`

	// Project identifier which contains AfnStrip
	Project string `json:"project,omitempty"`

	// Service in which this attachment is stored in
	StoredIn string `json:"storedIn,omitempty"`

	// Afn strip stream.
	Stream string `json:"stream,omitempty"`

	// ID of the testcase.
	TestCaseID int32 `json:"testCaseId,omitempty"`

	// Backing test result id.
	TestResultID int32 `json:"testResultId,omitempty"`

	// Backing test run id.
	TestRunID int32 `json:"testRunId,omitempty"`

	// Byte stream (uncompressed) length of Afn strip.
	UnCompressedStreamLength int64 `json:"unCompressedStreamLength,omitempty"`

	// Url of the attachment created.
	URL string `json:"url,omitempty"`
}

// Validate validates this afn strip
func (m *AfnStrip) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AfnStrip) validateCreationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AfnStrip) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AfnStrip) UnmarshalBinary(b []byte) error {
	var res AfnStrip
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
