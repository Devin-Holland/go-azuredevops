// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TaskHubLicenseDetails task hub license details
// swagger:model TaskHubLicenseDetails
type TaskHubLicenseDetails struct {

	// enterprise users count
	EnterpriseUsersCount int32 `json:"enterpriseUsersCount,omitempty"`

	// failed to reach all providers
	FailedToReachAllProviders bool `json:"failedToReachAllProviders,omitempty"`

	// free hosted license count
	FreeHostedLicenseCount int32 `json:"freeHostedLicenseCount,omitempty"`

	// free license count
	FreeLicenseCount int32 `json:"freeLicenseCount,omitempty"`

	// has license count ever updated
	HasLicenseCountEverUpdated bool `json:"hasLicenseCountEverUpdated,omitempty"`

	// hosted agent minutes free count
	HostedAgentMinutesFreeCount int32 `json:"hostedAgentMinutesFreeCount,omitempty"`

	// hosted agent minutes used count
	HostedAgentMinutesUsedCount int32 `json:"hostedAgentMinutesUsedCount,omitempty"`

	// hosted licenses are premium
	HostedLicensesArePremium bool `json:"hostedLicensesArePremium,omitempty"`

	// marketplace purchased hosted licenses
	MarketplacePurchasedHostedLicenses []*MarketplacePurchasedLicense `json:"marketplacePurchasedHostedLicenses"`

	// msdn users count
	MsdnUsersCount int32 `json:"msdnUsersCount,omitempty"`

	// Microsoft-hosted licenses purchased from VSTS directly.
	PurchasedHostedLicenseCount int32 `json:"purchasedHostedLicenseCount,omitempty"`

	// Self-hosted licenses purchased from VSTS directly.
	PurchasedLicenseCount int32 `json:"purchasedLicenseCount,omitempty"`

	// total hosted license count
	TotalHostedLicenseCount int32 `json:"totalHostedLicenseCount,omitempty"`

	// total license count
	TotalLicenseCount int32 `json:"totalLicenseCount,omitempty"`

	// total private license count
	TotalPrivateLicenseCount int32 `json:"totalPrivateLicenseCount,omitempty"`
}

// Validate validates this task hub license details
func (m *TaskHubLicenseDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMarketplacePurchasedHostedLicenses(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskHubLicenseDetails) validateMarketplacePurchasedHostedLicenses(formats strfmt.Registry) error {

	if swag.IsZero(m.MarketplacePurchasedHostedLicenses) { // not required
		return nil
	}

	for i := 0; i < len(m.MarketplacePurchasedHostedLicenses); i++ {
		if swag.IsZero(m.MarketplacePurchasedHostedLicenses[i]) { // not required
			continue
		}

		if m.MarketplacePurchasedHostedLicenses[i] != nil {
			if err := m.MarketplacePurchasedHostedLicenses[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("marketplacePurchasedHostedLicenses" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskHubLicenseDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskHubLicenseDetails) UnmarshalBinary(b []byte) error {
	var res TaskHubLicenseDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
