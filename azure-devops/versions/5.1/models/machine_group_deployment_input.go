// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// MachineGroupDeploymentInput machine group deployment input
// swagger:model MachineGroupDeploymentInput
type MachineGroupDeploymentInput struct {
	DeploymentInput

	// Deployment group health option.
	DeploymentHealthOption string `json:"deploymentHealthOption,omitempty"`

	// Minimum percentage of the targets guaranteed to be healthy.
	HealthPercent int32 `json:"healthPercent,omitempty"`

	// Deployment target tag filter.
	Tags []string `json:"tags"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *MachineGroupDeploymentInput) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 DeploymentInput
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.DeploymentInput = aO0

	// now for regular properties
	var propsMachineGroupDeploymentInput struct {
		DeploymentHealthOption string `json:"deploymentHealthOption,omitempty"`

		HealthPercent int32 `json:"healthPercent,omitempty"`

		Tags []string `json:"tags"`
	}
	if err := swag.ReadJSON(raw, &propsMachineGroupDeploymentInput); err != nil {
		return err
	}
	m.DeploymentHealthOption = propsMachineGroupDeploymentInput.DeploymentHealthOption

	m.HealthPercent = propsMachineGroupDeploymentInput.HealthPercent

	m.Tags = propsMachineGroupDeploymentInput.Tags

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m MachineGroupDeploymentInput) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.DeploymentInput)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsMachineGroupDeploymentInput struct {
		DeploymentHealthOption string `json:"deploymentHealthOption,omitempty"`

		HealthPercent int32 `json:"healthPercent,omitempty"`

		Tags []string `json:"tags"`
	}
	propsMachineGroupDeploymentInput.DeploymentHealthOption = m.DeploymentHealthOption

	propsMachineGroupDeploymentInput.HealthPercent = m.HealthPercent

	propsMachineGroupDeploymentInput.Tags = m.Tags

	jsonDataPropsMachineGroupDeploymentInput, errMachineGroupDeploymentInput := swag.WriteJSON(propsMachineGroupDeploymentInput)
	if errMachineGroupDeploymentInput != nil {
		return nil, errMachineGroupDeploymentInput
	}
	_parts = append(_parts, jsonDataPropsMachineGroupDeploymentInput)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this machine group deployment input
func (m *MachineGroupDeploymentInput) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with DeploymentInput
	if err := m.DeploymentInput.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *MachineGroupDeploymentInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MachineGroupDeploymentInput) UnmarshalBinary(b []byte) error {
	var res MachineGroupDeploymentInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
