// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaskAgentPoolReference task agent pool reference
// swagger:model TaskAgentPoolReference
type TaskAgentPoolReference struct {

	// id
	ID int32 `json:"id,omitempty"`

	// Gets or sets a value indicating whether or not this pool is managed by the service.
	IsHosted bool `json:"isHosted,omitempty"`

	// Determines whether the pool is legacy.
	IsLegacy bool `json:"isLegacy,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// Gets or sets the type of the pool
	// Enum: [automation deployment]
	PoolType interface{} `json:"poolType,omitempty"`

	// scope
	// Format: uuid
	Scope strfmt.UUID `json:"scope,omitempty"`

	// Gets the current size of the pool.
	Size int32 `json:"size,omitempty"`
}

// Validate validates this task agent pool reference
func (m *TaskAgentPoolReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateScope(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskAgentPoolReference) validateScope(formats strfmt.Registry) error {

	if swag.IsZero(m.Scope) { // not required
		return nil
	}

	if err := validate.FormatOf("scope", "body", "uuid", m.Scope.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskAgentPoolReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskAgentPoolReference) UnmarshalBinary(b []byte) error {
	var res TaskAgentPoolReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
