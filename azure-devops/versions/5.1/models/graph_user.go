// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GraphUser Graph user entity
// swagger:model GraphUser
type GraphUser struct {
	GraphMember

	// The short, generally unique name for the user in the backing directory. For AAD users, this corresponds to the mail nickname, which is often but not necessarily similar to the part of the user's mail address before the @ sign. For GitHub users, this corresponds to the GitHub user handle.
	DirectoryAlias string `json:"directoryAlias,omitempty"`

	// When true, the group has been deleted in the identity provider
	IsDeletedInOrigin bool `json:"isDeletedInOrigin,omitempty"`

	// The meta type of the user in the origin, such as "member", "guest", etc. See UserMetaType for the set of possible values.
	MetaType string `json:"metaType,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GraphUser) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 GraphMember
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.GraphMember = aO0

	// now for regular properties
	var propsGraphUser struct {
		DirectoryAlias string `json:"directoryAlias,omitempty"`

		IsDeletedInOrigin bool `json:"isDeletedInOrigin,omitempty"`

		MetaType string `json:"metaType,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsGraphUser); err != nil {
		return err
	}
	m.DirectoryAlias = propsGraphUser.DirectoryAlias

	m.IsDeletedInOrigin = propsGraphUser.IsDeletedInOrigin

	m.MetaType = propsGraphUser.MetaType

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GraphUser) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.GraphMember)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsGraphUser struct {
		DirectoryAlias string `json:"directoryAlias,omitempty"`

		IsDeletedInOrigin bool `json:"isDeletedInOrigin,omitempty"`

		MetaType string `json:"metaType,omitempty"`
	}
	propsGraphUser.DirectoryAlias = m.DirectoryAlias

	propsGraphUser.IsDeletedInOrigin = m.IsDeletedInOrigin

	propsGraphUser.MetaType = m.MetaType

	jsonDataPropsGraphUser, errGraphUser := swag.WriteJSON(propsGraphUser)
	if errGraphUser != nil {
		return nil, errGraphUser
	}
	_parts = append(_parts, jsonDataPropsGraphUser)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this graph user
func (m *GraphUser) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with GraphMember
	if err := m.GraphMember.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *GraphUser) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GraphUser) UnmarshalBinary(b []byte) error {
	var res GraphUser
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
