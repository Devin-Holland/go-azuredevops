// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// VariableMultipliersServerExecutionOptions Represents options for running a phase based on values specified by a list of variables.
// swagger:model VariableMultipliersServerExecutionOptions
type VariableMultipliersServerExecutionOptions struct {
	ServerTargetExecutionOptions

	// Indicates whether failure of one job should prevent the phase from running in other jobs.
	ContinueOnError bool `json:"continueOnError,omitempty"`

	// The maximum number of server jobs to run in parallel.
	MaxConcurrency int32 `json:"maxConcurrency,omitempty"`

	// multipliers
	Multipliers []string `json:"multipliers"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *VariableMultipliersServerExecutionOptions) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 ServerTargetExecutionOptions
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.ServerTargetExecutionOptions = aO0

	// now for regular properties
	var propsVariableMultipliersServerExecutionOptions struct {
		ContinueOnError bool `json:"continueOnError,omitempty"`

		MaxConcurrency int32 `json:"maxConcurrency,omitempty"`

		Multipliers []string `json:"multipliers"`
	}
	if err := swag.ReadJSON(raw, &propsVariableMultipliersServerExecutionOptions); err != nil {
		return err
	}
	m.ContinueOnError = propsVariableMultipliersServerExecutionOptions.ContinueOnError

	m.MaxConcurrency = propsVariableMultipliersServerExecutionOptions.MaxConcurrency

	m.Multipliers = propsVariableMultipliersServerExecutionOptions.Multipliers

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m VariableMultipliersServerExecutionOptions) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.ServerTargetExecutionOptions)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsVariableMultipliersServerExecutionOptions struct {
		ContinueOnError bool `json:"continueOnError,omitempty"`

		MaxConcurrency int32 `json:"maxConcurrency,omitempty"`

		Multipliers []string `json:"multipliers"`
	}
	propsVariableMultipliersServerExecutionOptions.ContinueOnError = m.ContinueOnError

	propsVariableMultipliersServerExecutionOptions.MaxConcurrency = m.MaxConcurrency

	propsVariableMultipliersServerExecutionOptions.Multipliers = m.Multipliers

	jsonDataPropsVariableMultipliersServerExecutionOptions, errVariableMultipliersServerExecutionOptions := swag.WriteJSON(propsVariableMultipliersServerExecutionOptions)
	if errVariableMultipliersServerExecutionOptions != nil {
		return nil, errVariableMultipliersServerExecutionOptions
	}
	_parts = append(_parts, jsonDataPropsVariableMultipliersServerExecutionOptions)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this variable multipliers server execution options
func (m *VariableMultipliersServerExecutionOptions) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with ServerTargetExecutionOptions
	if err := m.ServerTargetExecutionOptions.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *VariableMultipliersServerExecutionOptions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VariableMultipliersServerExecutionOptions) UnmarshalBinary(b []byte) error {
	var res VariableMultipliersServerExecutionOptions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
