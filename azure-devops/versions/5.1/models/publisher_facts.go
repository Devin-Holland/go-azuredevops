// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PublisherFacts High-level information about the publisher, like id's and names
// swagger:model PublisherFacts
type PublisherFacts struct {

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// flags
	// Enum: [unChanged none disabled verified certified serviceFlags]
	Flags interface{} `json:"flags,omitempty"`

	// publisher Id
	// Format: uuid
	PublisherID strfmt.UUID `json:"publisherId,omitempty"`

	// publisher name
	PublisherName string `json:"publisherName,omitempty"`
}

// Validate validates this publisher facts
func (m *PublisherFacts) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublisherID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PublisherFacts) validatePublisherID(formats strfmt.Registry) error {

	if swag.IsZero(m.PublisherID) { // not required
		return nil
	}

	if err := validate.FormatOf("publisherId", "body", "uuid", m.PublisherID.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PublisherFacts) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PublisherFacts) UnmarshalBinary(b []byte) error {
	var res PublisherFacts
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
