// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// AceExtendedInformation Holds the inherited and effective permission information for a given AccessControlEntry.
// swagger:model AceExtendedInformation
type AceExtendedInformation struct {

	// This is the combination of all of the explicit and inherited permissions for this identity on this token.  These are the permissions used when determining if a given user has permission to perform an action.
	EffectiveAllow int32 `json:"effectiveAllow,omitempty"`

	// This is the combination of all of the explicit and inherited permissions for this identity on this token.  These are the permissions used when determining if a given user has permission to perform an action.
	EffectiveDeny int32 `json:"effectiveDeny,omitempty"`

	// These are the permissions that are inherited for this identity on this token.  If the token does not inherit permissions this will be 0.  Note that any permissions that have been explicitly set on this token for this identity, or any groups that this identity is a part of, are not included here.
	InheritedAllow int32 `json:"inheritedAllow,omitempty"`

	// These are the permissions that are inherited for this identity on this token.  If the token does not inherit permissions this will be 0.  Note that any permissions that have been explicitly set on this token for this identity, or any groups that this identity is a part of, are not included here.
	InheritedDeny int32 `json:"inheritedDeny,omitempty"`
}

// Validate validates this ace extended information
func (m *AceExtendedInformation) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AceExtendedInformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AceExtendedInformation) UnmarshalBinary(b []byte) error {
	var res AceExtendedInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
