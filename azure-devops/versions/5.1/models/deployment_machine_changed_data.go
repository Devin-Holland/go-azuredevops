// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// DeploymentMachineChangedData deployment machine changed data
// swagger:model DeploymentMachineChangedData
type DeploymentMachineChangedData struct {
	DeploymentMachine

	// added tags
	AddedTags []string `json:"addedTags"`

	// deleted tags
	DeletedTags []string `json:"deletedTags"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *DeploymentMachineChangedData) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 DeploymentMachine
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.DeploymentMachine = aO0

	// now for regular properties
	var propsDeploymentMachineChangedData struct {
		AddedTags []string `json:"addedTags"`

		DeletedTags []string `json:"deletedTags"`
	}
	if err := swag.ReadJSON(raw, &propsDeploymentMachineChangedData); err != nil {
		return err
	}
	m.AddedTags = propsDeploymentMachineChangedData.AddedTags

	m.DeletedTags = propsDeploymentMachineChangedData.DeletedTags

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m DeploymentMachineChangedData) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.DeploymentMachine)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsDeploymentMachineChangedData struct {
		AddedTags []string `json:"addedTags"`

		DeletedTags []string `json:"deletedTags"`
	}
	propsDeploymentMachineChangedData.AddedTags = m.AddedTags

	propsDeploymentMachineChangedData.DeletedTags = m.DeletedTags

	jsonDataPropsDeploymentMachineChangedData, errDeploymentMachineChangedData := swag.WriteJSON(propsDeploymentMachineChangedData)
	if errDeploymentMachineChangedData != nil {
		return nil, errDeploymentMachineChangedData
	}
	_parts = append(_parts, jsonDataPropsDeploymentMachineChangedData)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this deployment machine changed data
func (m *DeploymentMachineChangedData) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with DeploymentMachine
	if err := m.DeploymentMachine.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *DeploymentMachineChangedData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DeploymentMachineChangedData) UnmarshalBinary(b []byte) error {
	var res DeploymentMachineChangedData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
