// Code generated by go-swagger; DO NOT EDIT.

package availability

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new availability API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for availability API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
CheckAvailability Check the availability of symbol service. This includes checking for feature flag, and possibly license in future. Note this is NOT an anonymous endpoint, and the caller will be redirected to authentication before hitting it.
*/
func (a *Client) CheckAvailability(params *CheckAvailabilityParams, authInfo runtime.ClientAuthInfoWriter) (*CheckAvailabilityOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCheckAvailabilityParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Check Availability",
		Method:             "GET",
		PathPattern:        "/{organization}/_apis/symbol/availability",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CheckAvailabilityReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*CheckAvailabilityOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
