// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTeamMembersWithExtendedPropertiesParams creates a new GetTeamMembersWithExtendedPropertiesParams object
// with the default values initialized.
func NewGetTeamMembersWithExtendedPropertiesParams() *GetTeamMembersWithExtendedPropertiesParams {
	var ()
	return &GetTeamMembersWithExtendedPropertiesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTeamMembersWithExtendedPropertiesParamsWithTimeout creates a new GetTeamMembersWithExtendedPropertiesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTeamMembersWithExtendedPropertiesParamsWithTimeout(timeout time.Duration) *GetTeamMembersWithExtendedPropertiesParams {
	var ()
	return &GetTeamMembersWithExtendedPropertiesParams{

		timeout: timeout,
	}
}

// NewGetTeamMembersWithExtendedPropertiesParamsWithContext creates a new GetTeamMembersWithExtendedPropertiesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTeamMembersWithExtendedPropertiesParamsWithContext(ctx context.Context) *GetTeamMembersWithExtendedPropertiesParams {
	var ()
	return &GetTeamMembersWithExtendedPropertiesParams{

		Context: ctx,
	}
}

// NewGetTeamMembersWithExtendedPropertiesParamsWithHTTPClient creates a new GetTeamMembersWithExtendedPropertiesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTeamMembersWithExtendedPropertiesParamsWithHTTPClient(client *http.Client) *GetTeamMembersWithExtendedPropertiesParams {
	var ()
	return &GetTeamMembersWithExtendedPropertiesParams{
		HTTPClient: client,
	}
}

/*GetTeamMembersWithExtendedPropertiesParams contains all the parameters to send to the API endpoint
for the get team members with extended properties operation typically these are written to a http.Request
*/
type GetTeamMembersWithExtendedPropertiesParams struct {

	/*NrDollarSkip*/
	DollarSkip *int32
	/*NrDollarTop*/
	DollarTop *int32
	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*ProjectID
	  The name or ID (GUID) of the team project the team belongs to.

	*/
	ProjectID string
	/*TeamID
	  The name or ID (GUID) of the team .

	*/
	TeamID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithTimeout(timeout time.Duration) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithContext(ctx context.Context) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithHTTPClient(client *http.Client) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarSkip adds the dollarSkip to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithDollarSkip(dollarSkip *int32) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetDollarSkip(dollarSkip)
	return o
}

// SetDollarSkip adds the dollarSkip to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetDollarSkip(dollarSkip *int32) {
	o.DollarSkip = dollarSkip
}

// WithDollarTop adds the dollarTop to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithDollarTop(dollarTop *int32) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetDollarTop(dollarTop)
	return o
}

// SetDollarTop adds the dollarTop to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetDollarTop(dollarTop *int32) {
	o.DollarTop = dollarTop
}

// WithAPIVersion adds the aPIVersion to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithAPIVersion(aPIVersion string) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithOrganization adds the organization to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithOrganization(organization string) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProjectID adds the projectID to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithProjectID(projectID string) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WithTeamID adds the teamID to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) WithTeamID(teamID string) *GetTeamMembersWithExtendedPropertiesParams {
	o.SetTeamID(teamID)
	return o
}

// SetTeamID adds the teamId to the get team members with extended properties params
func (o *GetTeamMembersWithExtendedPropertiesParams) SetTeamID(teamID string) {
	o.TeamID = teamID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTeamMembersWithExtendedPropertiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DollarSkip != nil {

		// query param $skip
		var qrNrDollarSkip int32
		if o.DollarSkip != nil {
			qrNrDollarSkip = *o.DollarSkip
		}
		qNrDollarSkip := swag.FormatInt32(qrNrDollarSkip)
		if qNrDollarSkip != "" {
			if err := r.SetQueryParam("$skip", qNrDollarSkip); err != nil {
				return err
			}
		}

	}

	if o.DollarTop != nil {

		// query param $top
		var qrNrDollarTop int32
		if o.DollarTop != nil {
			qrNrDollarTop = *o.DollarTop
		}
		qNrDollarTop := swag.FormatInt32(qrNrDollarTop)
		if qNrDollarTop != "" {
			if err := r.SetQueryParam("$top", qNrDollarTop); err != nil {
				return err
			}
		}

	}

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	// path param teamId
	if err := r.SetPathParam("teamId", o.TeamID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
