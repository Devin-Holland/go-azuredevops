// Code generated by go-swagger; DO NOT EDIT.

package source_providers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRestoreWebhooksParams creates a new RestoreWebhooksParams object
// with the default values initialized.
func NewRestoreWebhooksParams() *RestoreWebhooksParams {
	var ()
	return &RestoreWebhooksParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRestoreWebhooksParamsWithTimeout creates a new RestoreWebhooksParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRestoreWebhooksParamsWithTimeout(timeout time.Duration) *RestoreWebhooksParams {
	var ()
	return &RestoreWebhooksParams{

		timeout: timeout,
	}
}

// NewRestoreWebhooksParamsWithContext creates a new RestoreWebhooksParams object
// with the default values initialized, and the ability to set a context for a request
func NewRestoreWebhooksParamsWithContext(ctx context.Context) *RestoreWebhooksParams {
	var ()
	return &RestoreWebhooksParams{

		Context: ctx,
	}
}

// NewRestoreWebhooksParamsWithHTTPClient creates a new RestoreWebhooksParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRestoreWebhooksParamsWithHTTPClient(client *http.Client) *RestoreWebhooksParams {
	var ()
	return &RestoreWebhooksParams{
		HTTPClient: client,
	}
}

/*RestoreWebhooksParams contains all the parameters to send to the API endpoint
for the restore webhooks operation typically these are written to a http.Request
*/
type RestoreWebhooksParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*Body
	  The types of triggers to restore webhooks for.

	*/
	Body []string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Project
	  Project ID or project name

	*/
	Project string
	/*ProviderName
	  The name of the source provider.

	*/
	ProviderName string
	/*Repository
	  If specified, the vendor-specific identifier or the name of the repository to get webhooks. Can only be omitted for providers that do not support multiple repositories.

	*/
	Repository *string
	/*ServiceEndpointID
	  If specified, the ID of the service endpoint to query. Can only be omitted for providers that do not use service endpoints, e.g. TFVC or TFGit.

	*/
	ServiceEndpointID *strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the restore webhooks params
func (o *RestoreWebhooksParams) WithTimeout(timeout time.Duration) *RestoreWebhooksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the restore webhooks params
func (o *RestoreWebhooksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the restore webhooks params
func (o *RestoreWebhooksParams) WithContext(ctx context.Context) *RestoreWebhooksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the restore webhooks params
func (o *RestoreWebhooksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the restore webhooks params
func (o *RestoreWebhooksParams) WithHTTPClient(client *http.Client) *RestoreWebhooksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the restore webhooks params
func (o *RestoreWebhooksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the restore webhooks params
func (o *RestoreWebhooksParams) WithAPIVersion(aPIVersion string) *RestoreWebhooksParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the restore webhooks params
func (o *RestoreWebhooksParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the restore webhooks params
func (o *RestoreWebhooksParams) WithBody(body []string) *RestoreWebhooksParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the restore webhooks params
func (o *RestoreWebhooksParams) SetBody(body []string) {
	o.Body = body
}

// WithOrganization adds the organization to the restore webhooks params
func (o *RestoreWebhooksParams) WithOrganization(organization string) *RestoreWebhooksParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the restore webhooks params
func (o *RestoreWebhooksParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the restore webhooks params
func (o *RestoreWebhooksParams) WithProject(project string) *RestoreWebhooksParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the restore webhooks params
func (o *RestoreWebhooksParams) SetProject(project string) {
	o.Project = project
}

// WithProviderName adds the providerName to the restore webhooks params
func (o *RestoreWebhooksParams) WithProviderName(providerName string) *RestoreWebhooksParams {
	o.SetProviderName(providerName)
	return o
}

// SetProviderName adds the providerName to the restore webhooks params
func (o *RestoreWebhooksParams) SetProviderName(providerName string) {
	o.ProviderName = providerName
}

// WithRepository adds the repository to the restore webhooks params
func (o *RestoreWebhooksParams) WithRepository(repository *string) *RestoreWebhooksParams {
	o.SetRepository(repository)
	return o
}

// SetRepository adds the repository to the restore webhooks params
func (o *RestoreWebhooksParams) SetRepository(repository *string) {
	o.Repository = repository
}

// WithServiceEndpointID adds the serviceEndpointID to the restore webhooks params
func (o *RestoreWebhooksParams) WithServiceEndpointID(serviceEndpointID *strfmt.UUID) *RestoreWebhooksParams {
	o.SetServiceEndpointID(serviceEndpointID)
	return o
}

// SetServiceEndpointID adds the serviceEndpointId to the restore webhooks params
func (o *RestoreWebhooksParams) SetServiceEndpointID(serviceEndpointID *strfmt.UUID) {
	o.ServiceEndpointID = serviceEndpointID
}

// WriteToRequest writes these params to a swagger request
func (o *RestoreWebhooksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	// path param providerName
	if err := r.SetPathParam("providerName", o.ProviderName); err != nil {
		return err
	}

	if o.Repository != nil {

		// query param repository
		var qrRepository string
		if o.Repository != nil {
			qrRepository = *o.Repository
		}
		qRepository := qrRepository
		if qRepository != "" {
			if err := r.SetQueryParam("repository", qRepository); err != nil {
				return err
			}
		}

	}

	if o.ServiceEndpointID != nil {

		// query param serviceEndpointId
		var qrServiceEndpointID strfmt.UUID
		if o.ServiceEndpointID != nil {
			qrServiceEndpointID = *o.ServiceEndpointID
		}
		qServiceEndpointID := qrServiceEndpointID.String()
		if qServiceEndpointID != "" {
			if err := r.SetQueryParam("serviceEndpointId", qServiceEndpointID); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
