// Code generated by go-swagger; DO NOT EDIT.

package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "azure-devops/5.1/models"
)

// NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams creates a new PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams object
// with the default values initialized.
func NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams() *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	var ()
	return &PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithTimeout creates a new PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithTimeout(timeout time.Duration) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	var ()
	return &PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams{

		timeout: timeout,
	}
}

// NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithContext creates a new PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithContext(ctx context.Context) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	var ()
	return &PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams{

		Context: ctx,
	}
}

// NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithHTTPClient creates a new PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParamsWithHTTPClient(client *http.Client) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	var ()
	return &PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams{
		HTTPClient: client,
	}
}

/*PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams contains all the parameters to send to the API endpoint
for the put organization apis work processes process ID work item types wit ref name rules rule ID operation typically these are written to a http.Request
*/
type PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*Body*/
	Body *models.UpdateProcessRuleRequest
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*ProcessID
	  The ID of the process

	*/
	ProcessID strfmt.UUID
	/*RuleID
	  The ID of the rule

	*/
	RuleID strfmt.UUID
	/*WitRefName
	  The reference name of the work item type

	*/
	WitRefName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithTimeout(timeout time.Duration) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithContext(ctx context.Context) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithHTTPClient(client *http.Client) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithAPIVersion(aPIVersion string) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithBody(body *models.UpdateProcessRuleRequest) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetBody(body *models.UpdateProcessRuleRequest) {
	o.Body = body
}

// WithOrganization adds the organization to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithOrganization(organization string) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProcessID adds the processID to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithProcessID(processID strfmt.UUID) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetProcessID(processID)
	return o
}

// SetProcessID adds the processId to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetProcessID(processID strfmt.UUID) {
	o.ProcessID = processID
}

// WithRuleID adds the ruleID to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithRuleID(ruleID strfmt.UUID) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetRuleID(ruleID)
	return o
}

// SetRuleID adds the ruleId to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetRuleID(ruleID strfmt.UUID) {
	o.RuleID = ruleID
}

// WithWitRefName adds the witRefName to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WithWitRefName(witRefName string) *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams {
	o.SetWitRefName(witRefName)
	return o
}

// SetWitRefName adds the witRefName to the put organization apis work processes process ID work item types wit ref name rules rule ID params
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) SetWitRefName(witRefName string) {
	o.WitRefName = witRefName
}

// WriteToRequest writes these params to a swagger request
func (o *PutOrganizationApisWorkProcessesProcessIDWorkItemTypesWitRefNameRulesRuleIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param processId
	if err := r.SetPathParam("processId", o.ProcessID.String()); err != nil {
		return err
	}

	// path param ruleId
	if err := r.SetPathParam("ruleId", o.RuleID.String()); err != nil {
		return err
	}

	// path param witRefName
	if err := r.SetPathParam("witRefName", o.WitRefName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
