// Code generated by go-swagger; DO NOT EDIT.

package capacities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "azure-devops/5.1/models"
)

// NewReplaceCapacitiesWithIdentityRefParams creates a new ReplaceCapacitiesWithIdentityRefParams object
// with the default values initialized.
func NewReplaceCapacitiesWithIdentityRefParams() *ReplaceCapacitiesWithIdentityRefParams {
	var ()
	return &ReplaceCapacitiesWithIdentityRefParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewReplaceCapacitiesWithIdentityRefParamsWithTimeout creates a new ReplaceCapacitiesWithIdentityRefParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewReplaceCapacitiesWithIdentityRefParamsWithTimeout(timeout time.Duration) *ReplaceCapacitiesWithIdentityRefParams {
	var ()
	return &ReplaceCapacitiesWithIdentityRefParams{

		timeout: timeout,
	}
}

// NewReplaceCapacitiesWithIdentityRefParamsWithContext creates a new ReplaceCapacitiesWithIdentityRefParams object
// with the default values initialized, and the ability to set a context for a request
func NewReplaceCapacitiesWithIdentityRefParamsWithContext(ctx context.Context) *ReplaceCapacitiesWithIdentityRefParams {
	var ()
	return &ReplaceCapacitiesWithIdentityRefParams{

		Context: ctx,
	}
}

// NewReplaceCapacitiesWithIdentityRefParamsWithHTTPClient creates a new ReplaceCapacitiesWithIdentityRefParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewReplaceCapacitiesWithIdentityRefParamsWithHTTPClient(client *http.Client) *ReplaceCapacitiesWithIdentityRefParams {
	var ()
	return &ReplaceCapacitiesWithIdentityRefParams{
		HTTPClient: client,
	}
}

/*ReplaceCapacitiesWithIdentityRefParams contains all the parameters to send to the API endpoint
for the replace capacities with identity ref operation typically these are written to a http.Request
*/
type ReplaceCapacitiesWithIdentityRefParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*Body
	  Team capacity to replace

	*/
	Body []*models.TeamMemberCapacityIdentityRef
	/*IterationID
	  ID of the iteration

	*/
	IterationID strfmt.UUID
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Project
	  Project ID or project name

	*/
	Project string
	/*Team
	  Team ID or team name

	*/
	Team string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithTimeout(timeout time.Duration) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithContext(ctx context.Context) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithHTTPClient(client *http.Client) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithAPIVersion(aPIVersion string) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithBody(body []*models.TeamMemberCapacityIdentityRef) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetBody(body []*models.TeamMemberCapacityIdentityRef) {
	o.Body = body
}

// WithIterationID adds the iterationID to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithIterationID(iterationID strfmt.UUID) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetIterationID(iterationID)
	return o
}

// SetIterationID adds the iterationId to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetIterationID(iterationID strfmt.UUID) {
	o.IterationID = iterationID
}

// WithOrganization adds the organization to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithOrganization(organization string) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithProject(project string) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetProject(project string) {
	o.Project = project
}

// WithTeam adds the team to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) WithTeam(team string) *ReplaceCapacitiesWithIdentityRefParams {
	o.SetTeam(team)
	return o
}

// SetTeam adds the team to the replace capacities with identity ref params
func (o *ReplaceCapacitiesWithIdentityRefParams) SetTeam(team string) {
	o.Team = team
}

// WriteToRequest writes these params to a swagger request
func (o *ReplaceCapacitiesWithIdentityRefParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param iterationId
	if err := r.SetPathParam("iterationId", o.IterationID.String()); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	// path param team
	if err := r.SetPathParam("team", o.Team); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
