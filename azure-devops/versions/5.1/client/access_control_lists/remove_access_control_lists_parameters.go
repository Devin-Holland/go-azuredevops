// Code generated by go-swagger; DO NOT EDIT.

package access_control_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemoveAccessControlListsParams creates a new RemoveAccessControlListsParams object
// with the default values initialized.
func NewRemoveAccessControlListsParams() *RemoveAccessControlListsParams {
	var ()
	return &RemoveAccessControlListsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveAccessControlListsParamsWithTimeout creates a new RemoveAccessControlListsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveAccessControlListsParamsWithTimeout(timeout time.Duration) *RemoveAccessControlListsParams {
	var ()
	return &RemoveAccessControlListsParams{

		timeout: timeout,
	}
}

// NewRemoveAccessControlListsParamsWithContext creates a new RemoveAccessControlListsParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveAccessControlListsParamsWithContext(ctx context.Context) *RemoveAccessControlListsParams {
	var ()
	return &RemoveAccessControlListsParams{

		Context: ctx,
	}
}

// NewRemoveAccessControlListsParamsWithHTTPClient creates a new RemoveAccessControlListsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveAccessControlListsParamsWithHTTPClient(client *http.Client) *RemoveAccessControlListsParams {
	var ()
	return &RemoveAccessControlListsParams{
		HTTPClient: client,
	}
}

/*RemoveAccessControlListsParams contains all the parameters to send to the API endpoint
for the remove access control lists operation typically these are written to a http.Request
*/
type RemoveAccessControlListsParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Recurse
	  If true and this is a hierarchical namespace, also remove child ACLs of the specified tokens.

	*/
	Recurse *bool
	/*SecurityNamespaceID
	  Security namespace identifier.

	*/
	SecurityNamespaceID strfmt.UUID
	/*Tokens
	  One or more comma-separated security tokens

	*/
	Tokens *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithTimeout(timeout time.Duration) *RemoveAccessControlListsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithContext(ctx context.Context) *RemoveAccessControlListsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithHTTPClient(client *http.Client) *RemoveAccessControlListsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithAPIVersion(aPIVersion string) *RemoveAccessControlListsParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithOrganization adds the organization to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithOrganization(organization string) *RemoveAccessControlListsParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithRecurse adds the recurse to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithRecurse(recurse *bool) *RemoveAccessControlListsParams {
	o.SetRecurse(recurse)
	return o
}

// SetRecurse adds the recurse to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetRecurse(recurse *bool) {
	o.Recurse = recurse
}

// WithSecurityNamespaceID adds the securityNamespaceID to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithSecurityNamespaceID(securityNamespaceID strfmt.UUID) *RemoveAccessControlListsParams {
	o.SetSecurityNamespaceID(securityNamespaceID)
	return o
}

// SetSecurityNamespaceID adds the securityNamespaceId to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetSecurityNamespaceID(securityNamespaceID strfmt.UUID) {
	o.SecurityNamespaceID = securityNamespaceID
}

// WithTokens adds the tokens to the remove access control lists params
func (o *RemoveAccessControlListsParams) WithTokens(tokens *string) *RemoveAccessControlListsParams {
	o.SetTokens(tokens)
	return o
}

// SetTokens adds the tokens to the remove access control lists params
func (o *RemoveAccessControlListsParams) SetTokens(tokens *string) {
	o.Tokens = tokens
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveAccessControlListsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if o.Recurse != nil {

		// query param recurse
		var qrRecurse bool
		if o.Recurse != nil {
			qrRecurse = *o.Recurse
		}
		qRecurse := swag.FormatBool(qrRecurse)
		if qRecurse != "" {
			if err := r.SetQueryParam("recurse", qRecurse); err != nil {
				return err
			}
		}

	}

	// path param securityNamespaceId
	if err := r.SetPathParam("securityNamespaceId", o.SecurityNamespaceID.String()); err != nil {
		return err
	}

	if o.Tokens != nil {

		// query param tokens
		var qrTokens string
		if o.Tokens != nil {
			qrTokens = *o.Tokens
		}
		qTokens := qrTokens
		if qTokens != "" {
			if err := r.SetQueryParam("tokens", qTokens); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
