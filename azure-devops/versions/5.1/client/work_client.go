// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"azure-devops/5.1/client/backlogs"
	"azure-devops/5.1/client/boards"
	"azure-devops/5.1/client/capacities"
	"azure-devops/5.1/client/cardrulesettings"
	"azure-devops/5.1/client/cardsettings"
	"azure-devops/5.1/client/chartimages"
	"azure-devops/5.1/client/columns"
	"azure-devops/5.1/client/iterations"
	"azure-devops/5.1/client/plans"
	"azure-devops/5.1/client/rows"
	"azure-devops/5.1/client/teamfieldvalues"
	"azure-devops/5.1/client/workitemsorder"
)

// Default work HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "dev.azure.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new work HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Work {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new work HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Work {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new work client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Work {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Work)
	cli.Transport = transport

	cli.Backlogs = backlogs.New(transport, formats)

	cli.Boards = boards.New(transport, formats)

	cli.Capacities = capacities.New(transport, formats)

	cli.Cardrulesettings = cardrulesettings.New(transport, formats)

	cli.Cardsettings = cardsettings.New(transport, formats)

	cli.Chartimages = chartimages.New(transport, formats)

	cli.Columns = columns.New(transport, formats)

	cli.Iterations = iterations.New(transport, formats)

	cli.Plans = plans.New(transport, formats)

	cli.Rows = rows.New(transport, formats)

	cli.Teamfieldvalues = teamfieldvalues.New(transport, formats)

	cli.Workitemsorder = workitemsorder.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Work is a client for work
type Work struct {
	Backlogs *backlogs.Client

	Boards *boards.Client

	Capacities *capacities.Client

	Cardrulesettings *cardrulesettings.Client

	Cardsettings *cardsettings.Client

	Chartimages *chartimages.Client

	Columns *columns.Client

	Iterations *iterations.Client

	Plans *plans.Client

	Rows *rows.Client

	Teamfieldvalues *teamfieldvalues.Client

	Workitemsorder *workitemsorder.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Work) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Backlogs.SetTransport(transport)

	c.Boards.SetTransport(transport)

	c.Capacities.SetTransport(transport)

	c.Cardrulesettings.SetTransport(transport)

	c.Cardsettings.SetTransport(transport)

	c.Chartimages.SetTransport(transport)

	c.Columns.SetTransport(transport)

	c.Iterations.SetTransport(transport)

	c.Plans.SetTransport(transport)

	c.Rows.SetTransport(transport)

	c.Teamfieldvalues.SetTransport(transport)

	c.Workitemsorder.SetTransport(transport)

}
