// Code generated by go-swagger; DO NOT EDIT.

package publishers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetEventTypeParams creates a new GetEventTypeParams object
// with the default values initialized.
func NewGetEventTypeParams() *GetEventTypeParams {
	var ()
	return &GetEventTypeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetEventTypeParamsWithTimeout creates a new GetEventTypeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetEventTypeParamsWithTimeout(timeout time.Duration) *GetEventTypeParams {
	var ()
	return &GetEventTypeParams{

		timeout: timeout,
	}
}

// NewGetEventTypeParamsWithContext creates a new GetEventTypeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetEventTypeParamsWithContext(ctx context.Context) *GetEventTypeParams {
	var ()
	return &GetEventTypeParams{

		Context: ctx,
	}
}

// NewGetEventTypeParamsWithHTTPClient creates a new GetEventTypeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetEventTypeParamsWithHTTPClient(client *http.Client) *GetEventTypeParams {
	var ()
	return &GetEventTypeParams{
		HTTPClient: client,
	}
}

/*GetEventTypeParams contains all the parameters to send to the API endpoint
for the get event type operation typically these are written to a http.Request
*/
type GetEventTypeParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*EventTypeID*/
	EventTypeID string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*PublisherID
	  ID for a publisher.

	*/
	PublisherID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get event type params
func (o *GetEventTypeParams) WithTimeout(timeout time.Duration) *GetEventTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get event type params
func (o *GetEventTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get event type params
func (o *GetEventTypeParams) WithContext(ctx context.Context) *GetEventTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get event type params
func (o *GetEventTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get event type params
func (o *GetEventTypeParams) WithHTTPClient(client *http.Client) *GetEventTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get event type params
func (o *GetEventTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get event type params
func (o *GetEventTypeParams) WithAPIVersion(aPIVersion string) *GetEventTypeParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get event type params
func (o *GetEventTypeParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithEventTypeID adds the eventTypeID to the get event type params
func (o *GetEventTypeParams) WithEventTypeID(eventTypeID string) *GetEventTypeParams {
	o.SetEventTypeID(eventTypeID)
	return o
}

// SetEventTypeID adds the eventTypeId to the get event type params
func (o *GetEventTypeParams) SetEventTypeID(eventTypeID string) {
	o.EventTypeID = eventTypeID
}

// WithOrganization adds the organization to the get event type params
func (o *GetEventTypeParams) WithOrganization(organization string) *GetEventTypeParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get event type params
func (o *GetEventTypeParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPublisherID adds the publisherID to the get event type params
func (o *GetEventTypeParams) WithPublisherID(publisherID string) *GetEventTypeParams {
	o.SetPublisherID(publisherID)
	return o
}

// SetPublisherID adds the publisherId to the get event type params
func (o *GetEventTypeParams) SetPublisherID(publisherID string) {
	o.PublisherID = publisherID
}

// WriteToRequest writes these params to a swagger request
func (o *GetEventTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param eventTypeId
	if err := r.SetPathParam("eventTypeId", o.EventTypeID); err != nil {
		return err
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param publisherId
	if err := r.SetPathParam("publisherId", o.PublisherID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
