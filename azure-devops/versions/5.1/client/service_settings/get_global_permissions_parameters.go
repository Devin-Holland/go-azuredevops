// Code generated by go-swagger; DO NOT EDIT.

package service_settings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetGlobalPermissionsParams creates a new GetGlobalPermissionsParams object
// with the default values initialized.
func NewGetGlobalPermissionsParams() *GetGlobalPermissionsParams {
	var ()
	return &GetGlobalPermissionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetGlobalPermissionsParamsWithTimeout creates a new GetGlobalPermissionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetGlobalPermissionsParamsWithTimeout(timeout time.Duration) *GetGlobalPermissionsParams {
	var ()
	return &GetGlobalPermissionsParams{

		timeout: timeout,
	}
}

// NewGetGlobalPermissionsParamsWithContext creates a new GetGlobalPermissionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetGlobalPermissionsParamsWithContext(ctx context.Context) *GetGlobalPermissionsParams {
	var ()
	return &GetGlobalPermissionsParams{

		Context: ctx,
	}
}

// NewGetGlobalPermissionsParamsWithHTTPClient creates a new GetGlobalPermissionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetGlobalPermissionsParamsWithHTTPClient(client *http.Client) *GetGlobalPermissionsParams {
	var ()
	return &GetGlobalPermissionsParams{
		HTTPClient: client,
	}
}

/*GetGlobalPermissionsParams contains all the parameters to send to the API endpoint
for the get global permissions operation typically these are written to a http.Request
*/
type GetGlobalPermissionsParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*IncludeIds
	  Set to true to add IdentityIds to the permission objects.

	*/
	IncludeIds *bool
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get global permissions params
func (o *GetGlobalPermissionsParams) WithTimeout(timeout time.Duration) *GetGlobalPermissionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get global permissions params
func (o *GetGlobalPermissionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get global permissions params
func (o *GetGlobalPermissionsParams) WithContext(ctx context.Context) *GetGlobalPermissionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get global permissions params
func (o *GetGlobalPermissionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get global permissions params
func (o *GetGlobalPermissionsParams) WithHTTPClient(client *http.Client) *GetGlobalPermissionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get global permissions params
func (o *GetGlobalPermissionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get global permissions params
func (o *GetGlobalPermissionsParams) WithAPIVersion(aPIVersion string) *GetGlobalPermissionsParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get global permissions params
func (o *GetGlobalPermissionsParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithIncludeIds adds the includeIds to the get global permissions params
func (o *GetGlobalPermissionsParams) WithIncludeIds(includeIds *bool) *GetGlobalPermissionsParams {
	o.SetIncludeIds(includeIds)
	return o
}

// SetIncludeIds adds the includeIds to the get global permissions params
func (o *GetGlobalPermissionsParams) SetIncludeIds(includeIds *bool) {
	o.IncludeIds = includeIds
}

// WithOrganization adds the organization to the get global permissions params
func (o *GetGlobalPermissionsParams) WithOrganization(organization string) *GetGlobalPermissionsParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get global permissions params
func (o *GetGlobalPermissionsParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WriteToRequest writes these params to a swagger request
func (o *GetGlobalPermissionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.IncludeIds != nil {

		// query param includeIds
		var qrIncludeIds bool
		if o.IncludeIds != nil {
			qrIncludeIds = *o.IncludeIds
		}
		qIncludeIds := swag.FormatBool(qrIncludeIds)
		if qIncludeIds != "" {
			if err := r.SetQueryParam("includeIds", qIncludeIds); err != nil {
				return err
			}
		}

	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
