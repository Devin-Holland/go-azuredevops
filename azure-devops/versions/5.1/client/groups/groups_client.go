// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new groups API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for groups API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
MoveGroupToSection Moves a group to a different section.
*/
func (a *Client) MoveGroupToSection(params *MoveGroupToSectionParams, authInfo runtime.ClientAuthInfoWriter) (*MoveGroupToSectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMoveGroupToSectionParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Move Group To Section",
		Method:             "PUT",
		PathPattern:        "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups/{groupId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MoveGroupToSectionReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MoveGroupToSectionOK), nil

}

/*
RemoveGroup Removes a group from the work item form.
*/
func (a *Client) RemoveGroup(params *RemoveGroupParams, authInfo runtime.ClientAuthInfoWriter) (*RemoveGroupOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewRemoveGroupParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Remove Group",
		Method:             "DELETE",
		PathPattern:        "/{organization}/_apis/work/processes/{processId}/workItemTypes/{witRefName}/layout/pages/{pageId}/sections/{sectionId}/groups/{groupId}",
		ProducesMediaTypes: []string{""},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &RemoveGroupReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*RemoveGroupOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
