// Code generated by go-swagger; DO NOT EDIT.

package avatar

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRemoveProjectAvatarParams creates a new RemoveProjectAvatarParams object
// with the default values initialized.
func NewRemoveProjectAvatarParams() *RemoveProjectAvatarParams {
	var ()
	return &RemoveProjectAvatarParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRemoveProjectAvatarParamsWithTimeout creates a new RemoveProjectAvatarParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRemoveProjectAvatarParamsWithTimeout(timeout time.Duration) *RemoveProjectAvatarParams {
	var ()
	return &RemoveProjectAvatarParams{

		timeout: timeout,
	}
}

// NewRemoveProjectAvatarParamsWithContext creates a new RemoveProjectAvatarParams object
// with the default values initialized, and the ability to set a context for a request
func NewRemoveProjectAvatarParamsWithContext(ctx context.Context) *RemoveProjectAvatarParams {
	var ()
	return &RemoveProjectAvatarParams{

		Context: ctx,
	}
}

// NewRemoveProjectAvatarParamsWithHTTPClient creates a new RemoveProjectAvatarParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRemoveProjectAvatarParamsWithHTTPClient(client *http.Client) *RemoveProjectAvatarParams {
	var ()
	return &RemoveProjectAvatarParams{
		HTTPClient: client,
	}
}

/*RemoveProjectAvatarParams contains all the parameters to send to the API endpoint
for the remove project avatar operation typically these are written to a http.Request
*/
type RemoveProjectAvatarParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*ProjectID
	  The ID or name of the project.

	*/
	ProjectID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithTimeout(timeout time.Duration) *RemoveProjectAvatarParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithContext(ctx context.Context) *RemoveProjectAvatarParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithHTTPClient(client *http.Client) *RemoveProjectAvatarParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithAPIVersion(aPIVersion string) *RemoveProjectAvatarParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithOrganization adds the organization to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithOrganization(organization string) *RemoveProjectAvatarParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProjectID adds the projectID to the remove project avatar params
func (o *RemoveProjectAvatarParams) WithProjectID(projectID string) *RemoveProjectAvatarParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the remove project avatar params
func (o *RemoveProjectAvatarParams) SetProjectID(projectID string) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *RemoveProjectAvatarParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param projectId
	if err := r.SetPathParam("projectId", o.ProjectID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
