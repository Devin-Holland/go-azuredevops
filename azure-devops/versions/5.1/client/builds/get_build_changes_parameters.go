// Code generated by go-swagger; DO NOT EDIT.

package builds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetBuildChangesParams creates a new GetBuildChangesParams object
// with the default values initialized.
func NewGetBuildChangesParams() *GetBuildChangesParams {
	var ()
	return &GetBuildChangesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetBuildChangesParamsWithTimeout creates a new GetBuildChangesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetBuildChangesParamsWithTimeout(timeout time.Duration) *GetBuildChangesParams {
	var ()
	return &GetBuildChangesParams{

		timeout: timeout,
	}
}

// NewGetBuildChangesParamsWithContext creates a new GetBuildChangesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetBuildChangesParamsWithContext(ctx context.Context) *GetBuildChangesParams {
	var ()
	return &GetBuildChangesParams{

		Context: ctx,
	}
}

// NewGetBuildChangesParamsWithHTTPClient creates a new GetBuildChangesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetBuildChangesParamsWithHTTPClient(client *http.Client) *GetBuildChangesParams {
	var ()
	return &GetBuildChangesParams{
		HTTPClient: client,
	}
}

/*GetBuildChangesParams contains all the parameters to send to the API endpoint
for the get build changes operation typically these are written to a http.Request
*/
type GetBuildChangesParams struct {

	/*NrDollarTop
	  The maximum number of changes to return

	*/
	DollarTop *int32
	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*BuildID*/
	BuildID int32
	/*ContinuationToken*/
	ContinuationToken *string
	/*IncludeSourceChange*/
	IncludeSourceChange *bool
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Project
	  Project ID or project name

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get build changes params
func (o *GetBuildChangesParams) WithTimeout(timeout time.Duration) *GetBuildChangesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get build changes params
func (o *GetBuildChangesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get build changes params
func (o *GetBuildChangesParams) WithContext(ctx context.Context) *GetBuildChangesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get build changes params
func (o *GetBuildChangesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get build changes params
func (o *GetBuildChangesParams) WithHTTPClient(client *http.Client) *GetBuildChangesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get build changes params
func (o *GetBuildChangesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDollarTop adds the dollarTop to the get build changes params
func (o *GetBuildChangesParams) WithDollarTop(dollarTop *int32) *GetBuildChangesParams {
	o.SetDollarTop(dollarTop)
	return o
}

// SetDollarTop adds the dollarTop to the get build changes params
func (o *GetBuildChangesParams) SetDollarTop(dollarTop *int32) {
	o.DollarTop = dollarTop
}

// WithAPIVersion adds the aPIVersion to the get build changes params
func (o *GetBuildChangesParams) WithAPIVersion(aPIVersion string) *GetBuildChangesParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get build changes params
func (o *GetBuildChangesParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBuildID adds the buildID to the get build changes params
func (o *GetBuildChangesParams) WithBuildID(buildID int32) *GetBuildChangesParams {
	o.SetBuildID(buildID)
	return o
}

// SetBuildID adds the buildId to the get build changes params
func (o *GetBuildChangesParams) SetBuildID(buildID int32) {
	o.BuildID = buildID
}

// WithContinuationToken adds the continuationToken to the get build changes params
func (o *GetBuildChangesParams) WithContinuationToken(continuationToken *string) *GetBuildChangesParams {
	o.SetContinuationToken(continuationToken)
	return o
}

// SetContinuationToken adds the continuationToken to the get build changes params
func (o *GetBuildChangesParams) SetContinuationToken(continuationToken *string) {
	o.ContinuationToken = continuationToken
}

// WithIncludeSourceChange adds the includeSourceChange to the get build changes params
func (o *GetBuildChangesParams) WithIncludeSourceChange(includeSourceChange *bool) *GetBuildChangesParams {
	o.SetIncludeSourceChange(includeSourceChange)
	return o
}

// SetIncludeSourceChange adds the includeSourceChange to the get build changes params
func (o *GetBuildChangesParams) SetIncludeSourceChange(includeSourceChange *bool) {
	o.IncludeSourceChange = includeSourceChange
}

// WithOrganization adds the organization to the get build changes params
func (o *GetBuildChangesParams) WithOrganization(organization string) *GetBuildChangesParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get build changes params
func (o *GetBuildChangesParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the get build changes params
func (o *GetBuildChangesParams) WithProject(project string) *GetBuildChangesParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get build changes params
func (o *GetBuildChangesParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *GetBuildChangesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.DollarTop != nil {

		// query param $top
		var qrNrDollarTop int32
		if o.DollarTop != nil {
			qrNrDollarTop = *o.DollarTop
		}
		qNrDollarTop := swag.FormatInt32(qrNrDollarTop)
		if qNrDollarTop != "" {
			if err := r.SetQueryParam("$top", qNrDollarTop); err != nil {
				return err
			}
		}

	}

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param buildId
	if err := r.SetPathParam("buildId", swag.FormatInt32(o.BuildID)); err != nil {
		return err
	}

	if o.ContinuationToken != nil {

		// query param continuationToken
		var qrContinuationToken string
		if o.ContinuationToken != nil {
			qrContinuationToken = *o.ContinuationToken
		}
		qContinuationToken := qrContinuationToken
		if qContinuationToken != "" {
			if err := r.SetQueryParam("continuationToken", qContinuationToken); err != nil {
				return err
			}
		}

	}

	if o.IncludeSourceChange != nil {

		// query param includeSourceChange
		var qrIncludeSourceChange bool
		if o.IncludeSourceChange != nil {
			qrIncludeSourceChange = *o.IncludeSourceChange
		}
		qIncludeSourceChange := swag.FormatBool(qrIncludeSourceChange)
		if qIncludeSourceChange != "" {
			if err := r.SetQueryParam("includeSourceChange", qIncludeSourceChange); err != nil {
				return err
			}
		}

	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
