// Code generated by go-swagger; DO NOT EDIT.

package change_tracking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetFeedChangesParams creates a new GetFeedChangesParams object
// with the default values initialized.
func NewGetFeedChangesParams() *GetFeedChangesParams {
	var ()
	return &GetFeedChangesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetFeedChangesParamsWithTimeout creates a new GetFeedChangesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetFeedChangesParamsWithTimeout(timeout time.Duration) *GetFeedChangesParams {
	var ()
	return &GetFeedChangesParams{

		timeout: timeout,
	}
}

// NewGetFeedChangesParamsWithContext creates a new GetFeedChangesParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetFeedChangesParamsWithContext(ctx context.Context) *GetFeedChangesParams {
	var ()
	return &GetFeedChangesParams{

		Context: ctx,
	}
}

// NewGetFeedChangesParamsWithHTTPClient creates a new GetFeedChangesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetFeedChangesParamsWithHTTPClient(client *http.Client) *GetFeedChangesParams {
	var ()
	return &GetFeedChangesParams{
		HTTPClient: client,
	}
}

/*GetFeedChangesParams contains all the parameters to send to the API endpoint
for the get feed changes operation typically these are written to a http.Request
*/
type GetFeedChangesParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*BatchSize
	  Number of package changes to fetch. The default value is 1000. The maximum value is 2000.

	*/
	BatchSize *int32
	/*ContinuationToken
	  A continuation token which acts as a bookmark to a previously retrieved change. This token allows the user to continue retrieving changes in batches, picking up where the previous batch left off. If specified, all the changes that occur strictly after the token will be returned. If not specified or 0, iteration will start with the first change.

	*/
	ContinuationToken *int64
	/*IncludeDeleted
	  If true, get changes for all feeds including deleted feeds. The default value is false.

	*/
	IncludeDeleted *bool
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Project
	  Project ID or project name

	*/
	Project string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get feed changes params
func (o *GetFeedChangesParams) WithTimeout(timeout time.Duration) *GetFeedChangesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get feed changes params
func (o *GetFeedChangesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get feed changes params
func (o *GetFeedChangesParams) WithContext(ctx context.Context) *GetFeedChangesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get feed changes params
func (o *GetFeedChangesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get feed changes params
func (o *GetFeedChangesParams) WithHTTPClient(client *http.Client) *GetFeedChangesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get feed changes params
func (o *GetFeedChangesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get feed changes params
func (o *GetFeedChangesParams) WithAPIVersion(aPIVersion string) *GetFeedChangesParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get feed changes params
func (o *GetFeedChangesParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBatchSize adds the batchSize to the get feed changes params
func (o *GetFeedChangesParams) WithBatchSize(batchSize *int32) *GetFeedChangesParams {
	o.SetBatchSize(batchSize)
	return o
}

// SetBatchSize adds the batchSize to the get feed changes params
func (o *GetFeedChangesParams) SetBatchSize(batchSize *int32) {
	o.BatchSize = batchSize
}

// WithContinuationToken adds the continuationToken to the get feed changes params
func (o *GetFeedChangesParams) WithContinuationToken(continuationToken *int64) *GetFeedChangesParams {
	o.SetContinuationToken(continuationToken)
	return o
}

// SetContinuationToken adds the continuationToken to the get feed changes params
func (o *GetFeedChangesParams) SetContinuationToken(continuationToken *int64) {
	o.ContinuationToken = continuationToken
}

// WithIncludeDeleted adds the includeDeleted to the get feed changes params
func (o *GetFeedChangesParams) WithIncludeDeleted(includeDeleted *bool) *GetFeedChangesParams {
	o.SetIncludeDeleted(includeDeleted)
	return o
}

// SetIncludeDeleted adds the includeDeleted to the get feed changes params
func (o *GetFeedChangesParams) SetIncludeDeleted(includeDeleted *bool) {
	o.IncludeDeleted = includeDeleted
}

// WithOrganization adds the organization to the get feed changes params
func (o *GetFeedChangesParams) WithOrganization(organization string) *GetFeedChangesParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get feed changes params
func (o *GetFeedChangesParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the get feed changes params
func (o *GetFeedChangesParams) WithProject(project string) *GetFeedChangesParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get feed changes params
func (o *GetFeedChangesParams) SetProject(project string) {
	o.Project = project
}

// WriteToRequest writes these params to a swagger request
func (o *GetFeedChangesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.BatchSize != nil {

		// query param batchSize
		var qrBatchSize int32
		if o.BatchSize != nil {
			qrBatchSize = *o.BatchSize
		}
		qBatchSize := swag.FormatInt32(qrBatchSize)
		if qBatchSize != "" {
			if err := r.SetQueryParam("batchSize", qBatchSize); err != nil {
				return err
			}
		}

	}

	if o.ContinuationToken != nil {

		// query param continuationToken
		var qrContinuationToken int64
		if o.ContinuationToken != nil {
			qrContinuationToken = *o.ContinuationToken
		}
		qContinuationToken := swag.FormatInt64(qrContinuationToken)
		if qContinuationToken != "" {
			if err := r.SetQueryParam("continuationToken", qContinuationToken); err != nil {
				return err
			}
		}

	}

	if o.IncludeDeleted != nil {

		// query param includeDeleted
		var qrIncludeDeleted bool
		if o.IncludeDeleted != nil {
			qrIncludeDeleted = *o.IncludeDeleted
		}
		qIncludeDeleted := swag.FormatBool(qrIncludeDeleted)
		if qIncludeDeleted != "" {
			if err := r.SetQueryParam("includeDeleted", qIncludeDeleted); err != nil {
				return err
			}
		}

	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
