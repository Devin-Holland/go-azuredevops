// Code generated by go-swagger; DO NOT EDIT.

package test_suites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new test suites API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for test suites API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetSuitesByTestCaseID Find the list of all test suites in which a given test case is present. This is helpful if you need to find out which test suites are using a test case, when you need to make changes to a test case.
*/
func (a *Client) GetSuitesByTestCaseID(params *GetSuitesByTestCaseIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetSuitesByTestCaseIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetSuitesByTestCaseIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Get Suites By Test Case Id",
		Method:             "GET",
		PathPattern:        "/{organization}/_apis/testplan/suites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetSuitesByTestCaseIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetSuitesByTestCaseIDOK), nil

}

/*
GetTestSuitesForPlan Get test suites for plan.
*/
func (a *Client) GetTestSuitesForPlan(params *GetTestSuitesForPlanParams, authInfo runtime.ClientAuthInfoWriter) (*GetTestSuitesForPlanOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTestSuitesForPlanParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Get Test Suites For Plan",
		Method:             "GET",
		PathPattern:        "/{organization}/{project}/_apis/testplan/Plans/{planId}/suites",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetTestSuitesForPlanReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetTestSuitesForPlanOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
