// Code generated by go-swagger; DO NOT EDIT.

package suite_test_case

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTestCaseParams creates a new GetTestCaseParams object
// with the default values initialized.
func NewGetTestCaseParams() *GetTestCaseParams {
	var ()
	return &GetTestCaseParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTestCaseParamsWithTimeout creates a new GetTestCaseParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTestCaseParamsWithTimeout(timeout time.Duration) *GetTestCaseParams {
	var ()
	return &GetTestCaseParams{

		timeout: timeout,
	}
}

// NewGetTestCaseParamsWithContext creates a new GetTestCaseParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTestCaseParamsWithContext(ctx context.Context) *GetTestCaseParams {
	var ()
	return &GetTestCaseParams{

		Context: ctx,
	}
}

// NewGetTestCaseParamsWithHTTPClient creates a new GetTestCaseParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTestCaseParamsWithHTTPClient(client *http.Client) *GetTestCaseParams {
	var ()
	return &GetTestCaseParams{
		HTTPClient: client,
	}
}

/*GetTestCaseParams contains all the parameters to send to the API endpoint
for the get test case operation typically these are written to a http.Request
*/
type GetTestCaseParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*PlanID
	  ID of the test plan for which test cases are requested.

	*/
	PlanID int32
	/*Project
	  Project ID or project name

	*/
	Project string
	/*ReturnIdentityRef
	  If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.

	*/
	ReturnIdentityRef *bool
	/*SuiteID
	  ID of the test suite for which test cases are requested.

	*/
	SuiteID int32
	/*TestCaseIds
	  Test Case Ids to be fetched.

	*/
	TestCaseIds string
	/*WitFields
	  Get the list of witFields.

	*/
	WitFields *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get test case params
func (o *GetTestCaseParams) WithTimeout(timeout time.Duration) *GetTestCaseParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get test case params
func (o *GetTestCaseParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get test case params
func (o *GetTestCaseParams) WithContext(ctx context.Context) *GetTestCaseParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get test case params
func (o *GetTestCaseParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get test case params
func (o *GetTestCaseParams) WithHTTPClient(client *http.Client) *GetTestCaseParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get test case params
func (o *GetTestCaseParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get test case params
func (o *GetTestCaseParams) WithAPIVersion(aPIVersion string) *GetTestCaseParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get test case params
func (o *GetTestCaseParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithOrganization adds the organization to the get test case params
func (o *GetTestCaseParams) WithOrganization(organization string) *GetTestCaseParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get test case params
func (o *GetTestCaseParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPlanID adds the planID to the get test case params
func (o *GetTestCaseParams) WithPlanID(planID int32) *GetTestCaseParams {
	o.SetPlanID(planID)
	return o
}

// SetPlanID adds the planId to the get test case params
func (o *GetTestCaseParams) SetPlanID(planID int32) {
	o.PlanID = planID
}

// WithProject adds the project to the get test case params
func (o *GetTestCaseParams) WithProject(project string) *GetTestCaseParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get test case params
func (o *GetTestCaseParams) SetProject(project string) {
	o.Project = project
}

// WithReturnIdentityRef adds the returnIdentityRef to the get test case params
func (o *GetTestCaseParams) WithReturnIdentityRef(returnIdentityRef *bool) *GetTestCaseParams {
	o.SetReturnIdentityRef(returnIdentityRef)
	return o
}

// SetReturnIdentityRef adds the returnIdentityRef to the get test case params
func (o *GetTestCaseParams) SetReturnIdentityRef(returnIdentityRef *bool) {
	o.ReturnIdentityRef = returnIdentityRef
}

// WithSuiteID adds the suiteID to the get test case params
func (o *GetTestCaseParams) WithSuiteID(suiteID int32) *GetTestCaseParams {
	o.SetSuiteID(suiteID)
	return o
}

// SetSuiteID adds the suiteId to the get test case params
func (o *GetTestCaseParams) SetSuiteID(suiteID int32) {
	o.SuiteID = suiteID
}

// WithTestCaseIds adds the testCaseIds to the get test case params
func (o *GetTestCaseParams) WithTestCaseIds(testCaseIds string) *GetTestCaseParams {
	o.SetTestCaseIds(testCaseIds)
	return o
}

// SetTestCaseIds adds the testCaseIds to the get test case params
func (o *GetTestCaseParams) SetTestCaseIds(testCaseIds string) {
	o.TestCaseIds = testCaseIds
}

// WithWitFields adds the witFields to the get test case params
func (o *GetTestCaseParams) WithWitFields(witFields *string) *GetTestCaseParams {
	o.SetWitFields(witFields)
	return o
}

// SetWitFields adds the witFields to the get test case params
func (o *GetTestCaseParams) SetWitFields(witFields *string) {
	o.WitFields = witFields
}

// WriteToRequest writes these params to a swagger request
func (o *GetTestCaseParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param planId
	if err := r.SetPathParam("planId", swag.FormatInt32(o.PlanID)); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if o.ReturnIdentityRef != nil {

		// query param returnIdentityRef
		var qrReturnIdentityRef bool
		if o.ReturnIdentityRef != nil {
			qrReturnIdentityRef = *o.ReturnIdentityRef
		}
		qReturnIdentityRef := swag.FormatBool(qrReturnIdentityRef)
		if qReturnIdentityRef != "" {
			if err := r.SetQueryParam("returnIdentityRef", qReturnIdentityRef); err != nil {
				return err
			}
		}

	}

	// path param suiteId
	if err := r.SetPathParam("suiteId", swag.FormatInt32(o.SuiteID)); err != nil {
		return err
	}

	// path param testCaseIds
	if err := r.SetPathParam("testCaseIds", o.TestCaseIds); err != nil {
		return err
	}

	if o.WitFields != nil {

		// query param witFields
		var qrWitFields string
		if o.WitFields != nil {
			qrWitFields = *o.WitFields
		}
		qWitFields := qrWitFields
		if qWitFields != "" {
			if err := r.SetQueryParam("witFields", qWitFields); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
