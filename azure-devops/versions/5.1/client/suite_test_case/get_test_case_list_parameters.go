// Code generated by go-swagger; DO NOT EDIT.

package suite_test_case

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetTestCaseListParams creates a new GetTestCaseListParams object
// with the default values initialized.
func NewGetTestCaseListParams() *GetTestCaseListParams {
	var ()
	return &GetTestCaseListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetTestCaseListParamsWithTimeout creates a new GetTestCaseListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetTestCaseListParamsWithTimeout(timeout time.Duration) *GetTestCaseListParams {
	var ()
	return &GetTestCaseListParams{

		timeout: timeout,
	}
}

// NewGetTestCaseListParamsWithContext creates a new GetTestCaseListParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetTestCaseListParamsWithContext(ctx context.Context) *GetTestCaseListParams {
	var ()
	return &GetTestCaseListParams{

		Context: ctx,
	}
}

// NewGetTestCaseListParamsWithHTTPClient creates a new GetTestCaseListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetTestCaseListParamsWithHTTPClient(client *http.Client) *GetTestCaseListParams {
	var ()
	return &GetTestCaseListParams{
		HTTPClient: client,
	}
}

/*GetTestCaseListParams contains all the parameters to send to the API endpoint
for the get test case list operation typically these are written to a http.Request
*/
type GetTestCaseListParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*ConfigurationIds
	  Fetch Test Cases which contains all the configuration Ids specified.

	*/
	ConfigurationIds *string
	/*ContinuationToken
	  If the list of test cases returned is not complete, a continuation token to query next batch of test cases is included in the response header as "x-ms-continuationtoken". Omit this parameter to get the first batch of test cases.

	*/
	ContinuationToken *string
	/*Expand
	  If set to false, will get a smaller payload containing only basic details about the suite test case object

	*/
	Expand *bool
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*PlanID
	  ID of the test plan for which test cases are requested.

	*/
	PlanID int32
	/*Project
	  Project ID or project name

	*/
	Project string
	/*ReturnIdentityRef
	  If set to true, returns all identity fields, like AssignedTo, ActivatedBy etc., as IdentityRef objects. If set to false, these fields are returned as unique names in string format. This is false by default.

	*/
	ReturnIdentityRef *bool
	/*SuiteID
	  ID of the test suite for which test cases are requested.

	*/
	SuiteID int32
	/*TestIds
	  Test Case Ids to be fetched.

	*/
	TestIds *string
	/*WitFields
	  Get the list of witFields.

	*/
	WitFields *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get test case list params
func (o *GetTestCaseListParams) WithTimeout(timeout time.Duration) *GetTestCaseListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get test case list params
func (o *GetTestCaseListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get test case list params
func (o *GetTestCaseListParams) WithContext(ctx context.Context) *GetTestCaseListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get test case list params
func (o *GetTestCaseListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get test case list params
func (o *GetTestCaseListParams) WithHTTPClient(client *http.Client) *GetTestCaseListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get test case list params
func (o *GetTestCaseListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get test case list params
func (o *GetTestCaseListParams) WithAPIVersion(aPIVersion string) *GetTestCaseListParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get test case list params
func (o *GetTestCaseListParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithConfigurationIds adds the configurationIds to the get test case list params
func (o *GetTestCaseListParams) WithConfigurationIds(configurationIds *string) *GetTestCaseListParams {
	o.SetConfigurationIds(configurationIds)
	return o
}

// SetConfigurationIds adds the configurationIds to the get test case list params
func (o *GetTestCaseListParams) SetConfigurationIds(configurationIds *string) {
	o.ConfigurationIds = configurationIds
}

// WithContinuationToken adds the continuationToken to the get test case list params
func (o *GetTestCaseListParams) WithContinuationToken(continuationToken *string) *GetTestCaseListParams {
	o.SetContinuationToken(continuationToken)
	return o
}

// SetContinuationToken adds the continuationToken to the get test case list params
func (o *GetTestCaseListParams) SetContinuationToken(continuationToken *string) {
	o.ContinuationToken = continuationToken
}

// WithExpand adds the expand to the get test case list params
func (o *GetTestCaseListParams) WithExpand(expand *bool) *GetTestCaseListParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get test case list params
func (o *GetTestCaseListParams) SetExpand(expand *bool) {
	o.Expand = expand
}

// WithOrganization adds the organization to the get test case list params
func (o *GetTestCaseListParams) WithOrganization(organization string) *GetTestCaseListParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get test case list params
func (o *GetTestCaseListParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPlanID adds the planID to the get test case list params
func (o *GetTestCaseListParams) WithPlanID(planID int32) *GetTestCaseListParams {
	o.SetPlanID(planID)
	return o
}

// SetPlanID adds the planId to the get test case list params
func (o *GetTestCaseListParams) SetPlanID(planID int32) {
	o.PlanID = planID
}

// WithProject adds the project to the get test case list params
func (o *GetTestCaseListParams) WithProject(project string) *GetTestCaseListParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get test case list params
func (o *GetTestCaseListParams) SetProject(project string) {
	o.Project = project
}

// WithReturnIdentityRef adds the returnIdentityRef to the get test case list params
func (o *GetTestCaseListParams) WithReturnIdentityRef(returnIdentityRef *bool) *GetTestCaseListParams {
	o.SetReturnIdentityRef(returnIdentityRef)
	return o
}

// SetReturnIdentityRef adds the returnIdentityRef to the get test case list params
func (o *GetTestCaseListParams) SetReturnIdentityRef(returnIdentityRef *bool) {
	o.ReturnIdentityRef = returnIdentityRef
}

// WithSuiteID adds the suiteID to the get test case list params
func (o *GetTestCaseListParams) WithSuiteID(suiteID int32) *GetTestCaseListParams {
	o.SetSuiteID(suiteID)
	return o
}

// SetSuiteID adds the suiteId to the get test case list params
func (o *GetTestCaseListParams) SetSuiteID(suiteID int32) {
	o.SuiteID = suiteID
}

// WithTestIds adds the testIds to the get test case list params
func (o *GetTestCaseListParams) WithTestIds(testIds *string) *GetTestCaseListParams {
	o.SetTestIds(testIds)
	return o
}

// SetTestIds adds the testIds to the get test case list params
func (o *GetTestCaseListParams) SetTestIds(testIds *string) {
	o.TestIds = testIds
}

// WithWitFields adds the witFields to the get test case list params
func (o *GetTestCaseListParams) WithWitFields(witFields *string) *GetTestCaseListParams {
	o.SetWitFields(witFields)
	return o
}

// SetWitFields adds the witFields to the get test case list params
func (o *GetTestCaseListParams) SetWitFields(witFields *string) {
	o.WitFields = witFields
}

// WriteToRequest writes these params to a swagger request
func (o *GetTestCaseListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.ConfigurationIds != nil {

		// query param configurationIds
		var qrConfigurationIds string
		if o.ConfigurationIds != nil {
			qrConfigurationIds = *o.ConfigurationIds
		}
		qConfigurationIds := qrConfigurationIds
		if qConfigurationIds != "" {
			if err := r.SetQueryParam("configurationIds", qConfigurationIds); err != nil {
				return err
			}
		}

	}

	if o.ContinuationToken != nil {

		// query param continuationToken
		var qrContinuationToken string
		if o.ContinuationToken != nil {
			qrContinuationToken = *o.ContinuationToken
		}
		qContinuationToken := qrContinuationToken
		if qContinuationToken != "" {
			if err := r.SetQueryParam("continuationToken", qContinuationToken); err != nil {
				return err
			}
		}

	}

	if o.Expand != nil {

		// query param expand
		var qrExpand bool
		if o.Expand != nil {
			qrExpand = *o.Expand
		}
		qExpand := swag.FormatBool(qrExpand)
		if qExpand != "" {
			if err := r.SetQueryParam("expand", qExpand); err != nil {
				return err
			}
		}

	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param planId
	if err := r.SetPathParam("planId", swag.FormatInt32(o.PlanID)); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if o.ReturnIdentityRef != nil {

		// query param returnIdentityRef
		var qrReturnIdentityRef bool
		if o.ReturnIdentityRef != nil {
			qrReturnIdentityRef = *o.ReturnIdentityRef
		}
		qReturnIdentityRef := swag.FormatBool(qrReturnIdentityRef)
		if qReturnIdentityRef != "" {
			if err := r.SetQueryParam("returnIdentityRef", qReturnIdentityRef); err != nil {
				return err
			}
		}

	}

	// path param suiteId
	if err := r.SetPathParam("suiteId", swag.FormatInt32(o.SuiteID)); err != nil {
		return err
	}

	if o.TestIds != nil {

		// query param testIds
		var qrTestIds string
		if o.TestIds != nil {
			qrTestIds = *o.TestIds
		}
		qTestIds := qrTestIds
		if qTestIds != "" {
			if err := r.SetQueryParam("testIds", qTestIds); err != nil {
				return err
			}
		}

	}

	if o.WitFields != nil {

		// query param witFields
		var qrWitFields string
		if o.WitFields != nil {
			qrWitFields = *o.WitFields
		}
		qWitFields := qrWitFields
		if qWitFields != "" {
			if err := r.SetQueryParam("witFields", qWitFields); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
