// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "azure-devops/5.1/models"
)

// CreateRequestsRequestIDDebugEntriesReader is a Reader for the CreateRequestsRequestIDDebugEntries structure.
type CreateRequestsRequestIDDebugEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRequestsRequestIDDebugEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateRequestsRequestIDDebugEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateRequestsRequestIDDebugEntriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateRequestsRequestIDDebugEntriesConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateRequestsRequestIDDebugEntriesOK creates a CreateRequestsRequestIDDebugEntriesOK with default headers values
func NewCreateRequestsRequestIDDebugEntriesOK() *CreateRequestsRequestIDDebugEntriesOK {
	return &CreateRequestsRequestIDDebugEntriesOK{}
}

/*CreateRequestsRequestIDDebugEntriesOK handles this case with default header values.

Successfully created debug entries for the specified request.
*/
type CreateRequestsRequestIDDebugEntriesOK struct {
	Payload []*models.DebugEntry
}

func (o *CreateRequestsRequestIDDebugEntriesOK) Error() string {
	return fmt.Sprintf("[POST /{organization}/_apis/symbol/requests/{requestId}][%d] createRequestsRequestIdDebugEntriesOK  %+v", 200, o.Payload)
}

func (o *CreateRequestsRequestIDDebugEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRequestsRequestIDDebugEntriesBadRequest creates a CreateRequestsRequestIDDebugEntriesBadRequest with default headers values
func NewCreateRequestsRequestIDDebugEntriesBadRequest() *CreateRequestsRequestIDDebugEntriesBadRequest {
	return &CreateRequestsRequestIDDebugEntriesBadRequest{}
}

/*CreateRequestsRequestIDDebugEntriesBadRequest handles this case with default header values.

Could not create debug entries since the specified create behavior is not recognized.
*/
type CreateRequestsRequestIDDebugEntriesBadRequest struct {
	Payload []*models.DebugEntry
}

func (o *CreateRequestsRequestIDDebugEntriesBadRequest) Error() string {
	return fmt.Sprintf("[POST /{organization}/_apis/symbol/requests/{requestId}][%d] createRequestsRequestIdDebugEntriesBadRequest  %+v", 400, o.Payload)
}

func (o *CreateRequestsRequestIDDebugEntriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRequestsRequestIDDebugEntriesConflict creates a CreateRequestsRequestIDDebugEntriesConflict with default headers values
func NewCreateRequestsRequestIDDebugEntriesConflict() *CreateRequestsRequestIDDebugEntriesConflict {
	return &CreateRequestsRequestIDDebugEntriesConflict{}
}

/*CreateRequestsRequestIDDebugEntriesConflict handles this case with default header values.

Could not create debug entries since at least one entry already exists and the specified create behavior is ThrowIfExists.
*/
type CreateRequestsRequestIDDebugEntriesConflict struct {
	Payload []*models.DebugEntry
}

func (o *CreateRequestsRequestIDDebugEntriesConflict) Error() string {
	return fmt.Sprintf("[POST /{organization}/_apis/symbol/requests/{requestId}][%d] createRequestsRequestIdDebugEntriesConflict  %+v", 409, o.Payload)
}

func (o *CreateRequestsRequestIDDebugEntriesConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
