// Code generated by go-swagger; DO NOT EDIT.

package page_moves

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "azure-devops/5.1/models"
)

// NewCreateParams creates a new CreateParams object
// with the default values initialized.
func NewCreateParams() *CreateParams {
	var ()
	return &CreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateParamsWithTimeout creates a new CreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateParamsWithTimeout(timeout time.Duration) *CreateParams {
	var ()
	return &CreateParams{

		timeout: timeout,
	}
}

// NewCreateParamsWithContext creates a new CreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateParamsWithContext(ctx context.Context) *CreateParams {
	var ()
	return &CreateParams{

		Context: ctx,
	}
}

// NewCreateParamsWithHTTPClient creates a new CreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateParamsWithHTTPClient(client *http.Client) *CreateParams {
	var ()
	return &CreateParams{
		HTTPClient: client,
	}
}

/*CreateParams contains all the parameters to send to the API endpoint
for the create operation typically these are written to a http.Request
*/
type CreateParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*Body
	  Page more operation parameters.

	*/
	Body *models.WikiPageMoveParameters
	/*Comment
	  Comment that is to be associated with this page move.

	*/
	Comment *string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*Project
	  Project ID or project name

	*/
	Project string
	/*VersionDescriptorVersion
	  Version string identifier (name of tag/branch, SHA1 of commit)

	*/
	VersionDescriptorVersion *string
	/*VersionDescriptorVersionOptions
	  Version options - Specify additional modifiers to version (e.g Previous)

	*/
	VersionDescriptorVersionOptions *string
	/*VersionDescriptorVersionType
	  Version type (branch, tag, or commit). Determines how Id is interpreted

	*/
	VersionDescriptorVersionType *string
	/*WikiIdentifier
	  Wiki Id or name.

	*/
	WikiIdentifier string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create params
func (o *CreateParams) WithTimeout(timeout time.Duration) *CreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create params
func (o *CreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create params
func (o *CreateParams) WithContext(ctx context.Context) *CreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create params
func (o *CreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create params
func (o *CreateParams) WithHTTPClient(client *http.Client) *CreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create params
func (o *CreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the create params
func (o *CreateParams) WithAPIVersion(aPIVersion string) *CreateParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the create params
func (o *CreateParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the create params
func (o *CreateParams) WithBody(body *models.WikiPageMoveParameters) *CreateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create params
func (o *CreateParams) SetBody(body *models.WikiPageMoveParameters) {
	o.Body = body
}

// WithComment adds the comment to the create params
func (o *CreateParams) WithComment(comment *string) *CreateParams {
	o.SetComment(comment)
	return o
}

// SetComment adds the comment to the create params
func (o *CreateParams) SetComment(comment *string) {
	o.Comment = comment
}

// WithOrganization adds the organization to the create params
func (o *CreateParams) WithOrganization(organization string) *CreateParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the create params
func (o *CreateParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithProject adds the project to the create params
func (o *CreateParams) WithProject(project string) *CreateParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the create params
func (o *CreateParams) SetProject(project string) {
	o.Project = project
}

// WithVersionDescriptorVersion adds the versionDescriptorVersion to the create params
func (o *CreateParams) WithVersionDescriptorVersion(versionDescriptorVersion *string) *CreateParams {
	o.SetVersionDescriptorVersion(versionDescriptorVersion)
	return o
}

// SetVersionDescriptorVersion adds the versionDescriptorVersion to the create params
func (o *CreateParams) SetVersionDescriptorVersion(versionDescriptorVersion *string) {
	o.VersionDescriptorVersion = versionDescriptorVersion
}

// WithVersionDescriptorVersionOptions adds the versionDescriptorVersionOptions to the create params
func (o *CreateParams) WithVersionDescriptorVersionOptions(versionDescriptorVersionOptions *string) *CreateParams {
	o.SetVersionDescriptorVersionOptions(versionDescriptorVersionOptions)
	return o
}

// SetVersionDescriptorVersionOptions adds the versionDescriptorVersionOptions to the create params
func (o *CreateParams) SetVersionDescriptorVersionOptions(versionDescriptorVersionOptions *string) {
	o.VersionDescriptorVersionOptions = versionDescriptorVersionOptions
}

// WithVersionDescriptorVersionType adds the versionDescriptorVersionType to the create params
func (o *CreateParams) WithVersionDescriptorVersionType(versionDescriptorVersionType *string) *CreateParams {
	o.SetVersionDescriptorVersionType(versionDescriptorVersionType)
	return o
}

// SetVersionDescriptorVersionType adds the versionDescriptorVersionType to the create params
func (o *CreateParams) SetVersionDescriptorVersionType(versionDescriptorVersionType *string) {
	o.VersionDescriptorVersionType = versionDescriptorVersionType
}

// WithWikiIdentifier adds the wikiIdentifier to the create params
func (o *CreateParams) WithWikiIdentifier(wikiIdentifier string) *CreateParams {
	o.SetWikiIdentifier(wikiIdentifier)
	return o
}

// SetWikiIdentifier adds the wikiIdentifier to the create params
func (o *CreateParams) SetWikiIdentifier(wikiIdentifier string) {
	o.WikiIdentifier = wikiIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *CreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.Comment != nil {

		// query param comment
		var qrComment string
		if o.Comment != nil {
			qrComment = *o.Comment
		}
		qComment := qrComment
		if qComment != "" {
			if err := r.SetQueryParam("comment", qComment); err != nil {
				return err
			}
		}

	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	if o.VersionDescriptorVersion != nil {

		// query param versionDescriptor.version
		var qrVersionDescriptorVersion string
		if o.VersionDescriptorVersion != nil {
			qrVersionDescriptorVersion = *o.VersionDescriptorVersion
		}
		qVersionDescriptorVersion := qrVersionDescriptorVersion
		if qVersionDescriptorVersion != "" {
			if err := r.SetQueryParam("versionDescriptor.version", qVersionDescriptorVersion); err != nil {
				return err
			}
		}

	}

	if o.VersionDescriptorVersionOptions != nil {

		// query param versionDescriptor.versionOptions
		var qrVersionDescriptorVersionOptions string
		if o.VersionDescriptorVersionOptions != nil {
			qrVersionDescriptorVersionOptions = *o.VersionDescriptorVersionOptions
		}
		qVersionDescriptorVersionOptions := qrVersionDescriptorVersionOptions
		if qVersionDescriptorVersionOptions != "" {
			if err := r.SetQueryParam("versionDescriptor.versionOptions", qVersionDescriptorVersionOptions); err != nil {
				return err
			}
		}

	}

	if o.VersionDescriptorVersionType != nil {

		// query param versionDescriptor.versionType
		var qrVersionDescriptorVersionType string
		if o.VersionDescriptorVersionType != nil {
			qrVersionDescriptorVersionType = *o.VersionDescriptorVersionType
		}
		qVersionDescriptorVersionType := qrVersionDescriptorVersionType
		if qVersionDescriptorVersionType != "" {
			if err := r.SetQueryParam("versionDescriptor.versionType", qVersionDescriptorVersionType); err != nil {
				return err
			}
		}

	}

	// path param wikiIdentifier
	if err := r.SetPathParam("wikiIdentifier", o.WikiIdentifier); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
