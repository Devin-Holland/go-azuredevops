// Code generated by go-swagger; DO NOT EDIT.

package chartimages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new chartimages API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for chartimages API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetBoardChartImage Get a board chart image.
*/
func (a *Client) GetBoardChartImage(params *GetBoardChartImageParams, authInfo runtime.ClientAuthInfoWriter) (*GetBoardChartImageOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetBoardChartImageParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Get Board Chart Image",
		Method:             "GET",
		PathPattern:        "/{organization}/{project}/{team}/_apis/work/boards/{board}/chartimages/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetBoardChartImageReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetBoardChartImageOK), nil

}

/*
GetIterationChartImage Get an iteration chart image.
*/
func (a *Client) GetIterationChartImage(params *GetIterationChartImageParams, authInfo runtime.ClientAuthInfoWriter) (*GetIterationChartImageOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetIterationChartImageParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Get Iteration Chart Image",
		Method:             "GET",
		PathPattern:        "/{organization}/{project}/{team}/_apis/work/iterations/{iterationId}/chartimages/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetIterationChartImageReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetIterationChartImageOK), nil

}

/*
GetIterationsChartImage Get an iterations chart image.
*/
func (a *Client) GetIterationsChartImage(params *GetIterationsChartImageParams, authInfo runtime.ClientAuthInfoWriter) (*GetIterationsChartImageOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetIterationsChartImageParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Get Iterations Chart Image",
		Method:             "GET",
		PathPattern:        "/{organization}/{project}/{team}/_apis/work/iterations/chartimages/{name}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetIterationsChartImageReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetIterationsChartImageOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
