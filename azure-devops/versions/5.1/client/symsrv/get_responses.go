// Code generated by go-swagger; DO NOT EDIT.

package symsrv

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetReader is a Reader for the Get structure.
type GetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 302:
		result := NewGetFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFound creates a GetFound with default headers values
func NewGetFound() *GetFound {
	return &GetFound{}
}

/*GetFound handles this case with default header values.

The debug entry is found and its URI is placed in the Location header.
*/
type GetFound struct {
}

func (o *GetFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/_apis/symbol/symsrv/{debugEntryClientKey}][%d] getFound ", 302)
}

func (o *GetFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNotFound creates a GetNotFound with default headers values
func NewGetNotFound() *GetNotFound {
	return &GetNotFound{}
}

/*GetNotFound handles this case with default header values.

No debug entry was found for this client key.
*/
type GetNotFound struct {
}

func (o *GetNotFound) Error() string {
	return fmt.Sprintf("[GET /{organization}/_apis/symbol/symsrv/{debugEntryClientKey}][%d] getNotFound ", 404)
}

func (o *GetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
