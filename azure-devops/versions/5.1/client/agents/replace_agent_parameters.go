// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "azure-devops/5.1/models"
)

// NewReplaceAgentParams creates a new ReplaceAgentParams object
// with the default values initialized.
func NewReplaceAgentParams() *ReplaceAgentParams {
	var ()
	return &ReplaceAgentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewReplaceAgentParamsWithTimeout creates a new ReplaceAgentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewReplaceAgentParamsWithTimeout(timeout time.Duration) *ReplaceAgentParams {
	var ()
	return &ReplaceAgentParams{

		timeout: timeout,
	}
}

// NewReplaceAgentParamsWithContext creates a new ReplaceAgentParams object
// with the default values initialized, and the ability to set a context for a request
func NewReplaceAgentParamsWithContext(ctx context.Context) *ReplaceAgentParams {
	var ()
	return &ReplaceAgentParams{

		Context: ctx,
	}
}

// NewReplaceAgentParamsWithHTTPClient creates a new ReplaceAgentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewReplaceAgentParamsWithHTTPClient(client *http.Client) *ReplaceAgentParams {
	var ()
	return &ReplaceAgentParams{
		HTTPClient: client,
	}
}

/*ReplaceAgentParams contains all the parameters to send to the API endpoint
for the replace agent operation typically these are written to a http.Request
*/
type ReplaceAgentParams struct {

	/*AgentID
	  The agent to replace

	*/
	AgentID int32
	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.1' to use this version of the api.

	*/
	APIVersion string
	/*Body
	  Updated details about the replacing agent

	*/
	Body *models.TaskAgent
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*PoolID
	  The agent pool to use

	*/
	PoolID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the replace agent params
func (o *ReplaceAgentParams) WithTimeout(timeout time.Duration) *ReplaceAgentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the replace agent params
func (o *ReplaceAgentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the replace agent params
func (o *ReplaceAgentParams) WithContext(ctx context.Context) *ReplaceAgentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the replace agent params
func (o *ReplaceAgentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the replace agent params
func (o *ReplaceAgentParams) WithHTTPClient(client *http.Client) *ReplaceAgentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the replace agent params
func (o *ReplaceAgentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgentID adds the agentID to the replace agent params
func (o *ReplaceAgentParams) WithAgentID(agentID int32) *ReplaceAgentParams {
	o.SetAgentID(agentID)
	return o
}

// SetAgentID adds the agentId to the replace agent params
func (o *ReplaceAgentParams) SetAgentID(agentID int32) {
	o.AgentID = agentID
}

// WithAPIVersion adds the aPIVersion to the replace agent params
func (o *ReplaceAgentParams) WithAPIVersion(aPIVersion string) *ReplaceAgentParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the replace agent params
func (o *ReplaceAgentParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithBody adds the body to the replace agent params
func (o *ReplaceAgentParams) WithBody(body *models.TaskAgent) *ReplaceAgentParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the replace agent params
func (o *ReplaceAgentParams) SetBody(body *models.TaskAgent) {
	o.Body = body
}

// WithOrganization adds the organization to the replace agent params
func (o *ReplaceAgentParams) WithOrganization(organization string) *ReplaceAgentParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the replace agent params
func (o *ReplaceAgentParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPoolID adds the poolID to the replace agent params
func (o *ReplaceAgentParams) WithPoolID(poolID int32) *ReplaceAgentParams {
	o.SetPoolID(poolID)
	return o
}

// SetPoolID adds the poolId to the replace agent params
func (o *ReplaceAgentParams) SetPoolID(poolID int32) {
	o.PoolID = poolID
}

// WriteToRequest writes these params to a swagger request
func (o *ReplaceAgentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param agentId
	if err := r.SetPathParam("agentId", swag.FormatInt32(o.AgentID)); err != nil {
		return err
	}

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param poolId
	if err := r.SetPathParam("poolId", swag.FormatInt32(o.PoolID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
