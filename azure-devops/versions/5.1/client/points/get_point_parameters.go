// Code generated by go-swagger; DO NOT EDIT.

package points

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPointParams creates a new GetPointParams object
// with the default values initialized.
func NewGetPointParams() *GetPointParams {
	var ()
	return &GetPointParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPointParamsWithTimeout creates a new GetPointParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPointParamsWithTimeout(timeout time.Duration) *GetPointParams {
	var ()
	return &GetPointParams{

		timeout: timeout,
	}
}

// NewGetPointParamsWithContext creates a new GetPointParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPointParamsWithContext(ctx context.Context) *GetPointParams {
	var ()
	return &GetPointParams{

		Context: ctx,
	}
}

// NewGetPointParamsWithHTTPClient creates a new GetPointParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPointParamsWithHTTPClient(client *http.Client) *GetPointParams {
	var ()
	return &GetPointParams{
		HTTPClient: client,
	}
}

/*GetPointParams contains all the parameters to send to the API endpoint
for the get point operation typically these are written to a http.Request
*/
type GetPointParams struct {

	/*APIVersion
	  Version of the API to use.  This should be set to '5.1-preview.2' to use this version of the api.

	*/
	APIVersion string
	/*Organization
	  The name of the Azure DevOps organization.

	*/
	Organization string
	/*PlanID
	  ID of the test plan.

	*/
	PlanID int32
	/*PointIds
	  ID of the test point to get.

	*/
	PointIds int32
	/*Project
	  Project ID or project name

	*/
	Project string
	/*SuiteID
	  ID of the suite that contains the point.

	*/
	SuiteID int32
	/*WitFields
	  Comma-separated list of work item field names.

	*/
	WitFields *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get point params
func (o *GetPointParams) WithTimeout(timeout time.Duration) *GetPointParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get point params
func (o *GetPointParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get point params
func (o *GetPointParams) WithContext(ctx context.Context) *GetPointParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get point params
func (o *GetPointParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get point params
func (o *GetPointParams) WithHTTPClient(client *http.Client) *GetPointParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get point params
func (o *GetPointParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the get point params
func (o *GetPointParams) WithAPIVersion(aPIVersion string) *GetPointParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the get point params
func (o *GetPointParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithOrganization adds the organization to the get point params
func (o *GetPointParams) WithOrganization(organization string) *GetPointParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the get point params
func (o *GetPointParams) SetOrganization(organization string) {
	o.Organization = organization
}

// WithPlanID adds the planID to the get point params
func (o *GetPointParams) WithPlanID(planID int32) *GetPointParams {
	o.SetPlanID(planID)
	return o
}

// SetPlanID adds the planId to the get point params
func (o *GetPointParams) SetPlanID(planID int32) {
	o.PlanID = planID
}

// WithPointIds adds the pointIds to the get point params
func (o *GetPointParams) WithPointIds(pointIds int32) *GetPointParams {
	o.SetPointIds(pointIds)
	return o
}

// SetPointIds adds the pointIds to the get point params
func (o *GetPointParams) SetPointIds(pointIds int32) {
	o.PointIds = pointIds
}

// WithProject adds the project to the get point params
func (o *GetPointParams) WithProject(project string) *GetPointParams {
	o.SetProject(project)
	return o
}

// SetProject adds the project to the get point params
func (o *GetPointParams) SetProject(project string) {
	o.Project = project
}

// WithSuiteID adds the suiteID to the get point params
func (o *GetPointParams) WithSuiteID(suiteID int32) *GetPointParams {
	o.SetSuiteID(suiteID)
	return o
}

// SetSuiteID adds the suiteId to the get point params
func (o *GetPointParams) SetSuiteID(suiteID int32) {
	o.SuiteID = suiteID
}

// WithWitFields adds the witFields to the get point params
func (o *GetPointParams) WithWitFields(witFields *string) *GetPointParams {
	o.SetWitFields(witFields)
	return o
}

// SetWitFields adds the witFields to the get point params
func (o *GetPointParams) SetWitFields(witFields *string) {
	o.WitFields = witFields
}

// WriteToRequest writes these params to a swagger request
func (o *GetPointParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param api-version
	qrAPIVersion := o.APIVersion
	qAPIVersion := qrAPIVersion
	if qAPIVersion != "" {
		if err := r.SetQueryParam("api-version", qAPIVersion); err != nil {
			return err
		}
	}

	// path param organization
	if err := r.SetPathParam("organization", o.Organization); err != nil {
		return err
	}

	// path param planId
	if err := r.SetPathParam("planId", swag.FormatInt32(o.PlanID)); err != nil {
		return err
	}

	// path param pointIds
	if err := r.SetPathParam("pointIds", swag.FormatInt32(o.PointIds)); err != nil {
		return err
	}

	// path param project
	if err := r.SetPathParam("project", o.Project); err != nil {
		return err
	}

	// path param suiteId
	if err := r.SetPathParam("suiteId", swag.FormatInt32(o.SuiteID)); err != nil {
		return err
	}

	if o.WitFields != nil {

		// query param witFields
		var qrWitFields string
		if o.WitFields != nil {
			qrWitFields = *o.WitFields
		}
		qWitFields := qrWitFields
		if qWitFields != "" {
			if err := r.SetQueryParam("witFields", qWitFields); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
